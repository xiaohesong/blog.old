<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Here</title>
  <subtitle>xiaohesong&#39;s blogs</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-01T07:37:18.545Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xiaohesong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack3按需加载遇到的问题</title>
    <link href="http://yoursite.com/2017/12/01/webpack3%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/12/01/webpack3按需加载遇到的问题/</id>
    <published>2017-12-01T07:36:34.000Z</published>
    <updated>2017-12-01T07:37:18.545Z</updated>
    
    <content type="html"><![CDATA[<p>这节主要说的是自定义<code>webpack</code>之关于配置按需加载遇到的问题</p>
<ul>
<li><code>AsyncComponent.js</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">"react"</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncComponent</span>(<span class="params">importComponent</span>) </span>&#123;</div><div class="line">  <span class="class"><span class="keyword">class</span> <span class="title">AsyncComponent</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span>(props) &#123;</div><div class="line">      <span class="keyword">super</span>(props);</div><div class="line"></div><div class="line">      <span class="keyword">this</span>.state = &#123;</div><div class="line">        component: <span class="literal">null</span></div><div class="line">      &#125;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">async</span> componentDidMount() &#123;</div><div class="line">      <span class="keyword">const</span> &#123;<span class="attr">default</span>: component&#125; = <span class="keyword">await</span> importComponent();</div><div class="line"></div><div class="line">      <span class="keyword">this</span>.setState(&#123;<span class="attr">component</span>: component&#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    render() &#123;</div><div class="line">      <span class="keyword">const</span> Component = <span class="keyword">this</span>.state.component;</div><div class="line"></div><div class="line">      <span class="keyword">return</span> Component</div><div class="line">        ? <span class="xml"><span class="tag">&lt;<span class="name">Component</span> &#123;<span class="attr">...this.props</span>&#125;/&gt;</span></span></div><div class="line"><span class="xml">        : null;</span></div><div class="line"><span class="xml">    &#125;</span></div><div class="line"><span class="xml">  &#125;</span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">  return AsyncComponent;</span></div><div class="line"><span class="xml">&#125;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ol>
<li><code>Home.js</code></li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">const</span> Home = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> (<span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>It is My Home<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> Home</div></pre></td></tr></table></figure>
<ol>
<li><code>Menu.js</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123;Menu, Icon&#125; <span class="keyword">from</span> <span class="string">'antd'</span>;</div><div class="line"><span class="keyword">import</span> &#123;Link&#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span></div><div class="line"><span class="keyword">import</span> asyncComponent <span class="keyword">from</span> <span class="string">'./AsyncComponent'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> AsyncHome = asyncComponent(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"./Home"</span>))</div><div class="line"><span class="keyword">const</span> SubMenu = Menu.SubMenu;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMenu</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;Router&gt;</div><div class="line">        &lt;Route path=<span class="string">"/"</span> component=&#123;AsyncHome&#125; /&gt;</div><div class="line">        &lt;Menu theme=<span class="string">"dark"</span> defaultSelectedKeys=&#123;[<span class="string">'1'</span>]&#125; mode=<span class="string">"inline"</span>&gt;</div><div class="line">          &lt;Menu.Item key=<span class="string">"2"</span>&gt;</div><div class="line">            &lt;Icon type=<span class="string">"desktop"</span>/&gt;</div><div class="line">            &lt;Link to=<span class="string">"/"</span>&gt;</div><div class="line">              &lt;span&gt;Option <span class="number">2</span>&lt;<span class="regexp">/span&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>Link&gt;</div><div class="line">         &lt;<span class="regexp">/Menu.Item&gt;</span></div><div class="line"><span class="regexp">        &lt;/</span>Menu&gt;</div><div class="line">      &lt;<span class="regexp">/Router&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">export default MyMenu</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>预期的结果,这样应该是可以的.可是对于一些<code>es6</code>语法,<code>webpack</code>还是需要配置一番.所以碰到了问题.</p>
<h3 id="发现的问题"><a href="#发现的问题" class="headerlink" title="发现的问题"></a>发现的问题</h3><ol>
<li><code>Uncaught ReferenceError: regeneratorRuntime is not defined</code></li>
</ol>
<p>解决方法: 引入<code>transform-runtime</code>.</p>
<p><a href="https://www.npmjs.com/package/babel-plugin-transform-runtime" target="_blank" rel="external">包的地址</a></p>
<p><a href="https://segmentfault.com/q/1010000005596587?from=singlemessage&amp;isappinstalled=1" target="_blank" rel="external">transform-runtime与babel-polyfill的区别</a></p>
<ol>
<li><code>Uncaught ReferenceError: webpackJsonp is not defined</code></li>
</ol>
<p>解决方法: 引入<code>CommonsChunkPlugin</code></p>
<p><a href="https://github.com/xiaohesong/custom_react" target="_blank" rel="external">custom-react源码</a></p>
<h1 id="原文地址"><a href="#原文地址" class="headerlink" title="原文地址)"></a><a href="https://github.com/xiaohesong/ums/wiki/webpack%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98(2" target="_blank" rel="external">原文地址</a>)</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这节主要说的是自定义&lt;code&gt;webpack&lt;/code&gt;之关于配置按需加载遇到的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AsyncComponent.js&lt;/code&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>webpack react antd遇到的问题</title>
    <link href="http://yoursite.com/2017/12/01/webpack-react-antd%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/12/01/webpack-react-antd遇到的问题/</id>
    <published>2017-12-01T07:35:17.000Z</published>
    <updated>2017-12-01T07:36:08.712Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><a href="#初始化项目文件">初始化项目文件</a></li>
<li><a href="#加入antd">加入antd</a></li>
<li><a href="#问题">问题</a></li>
<li><a href="#总结">总结</a></li>
<li><a href="#相关链接">相关链接</a></li>
</ol>
<p>最近这两天把<code>redux</code>切换到了<code>redux-saga</code>之后,就想学习学习<code>webpack</code>. 咋说呢,这个东西被大家说的神乎其神,所以在我的认知里还是蛮神秘的(新手的感觉而已,不喜勿喷).<br>今天上午把webpack看了下,有个大致的方向,就想配一个简单的,可以本地开发运行的<code>react</code>(<a href="https://github.com/xiaohesong/custom_react" target="_blank" rel="external">github custom_react</a>)应用.</p>
<h3 id="初始化项目文件"><a href="#初始化项目文件" class="headerlink" title="初始化项目文件"></a>初始化项目文件</h3><ul>
<li><p><code>package.json</code><br>这个很简单,直接<code>npm init</code>就好.  <a href="https://github.com/xiaohesong/ums/wiki/environment" target="_blank" rel="external">npm?</a></p>
</li>
<li><p><code>index.html</code><br>我们新建一个<code>index.html</code>.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p public</div><div class="line">cd public</div><div class="line">touch index.html</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>index.html</code>内容如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"theme-color"</span> <span class="attr">content</span>=<span class="string">"#000000"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>custom<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ul>
<li><code>index.js</code><br>开始这个js文件之前,我们需要使用相关的包<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i --save react react-dom</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后我们的<code>index.js</code>是这样的.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">    &lt;App/&gt;,</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">);</div></pre></td></tr></table></figure></p>
<ul>
<li><p><code>App.js</code><br>然后我们的<code>App.js</code>是这样的.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    render() &#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">            &lt;h1&gt;Hello Word&lt;<span class="regexp">/h1&gt;</span></div><div class="line"><span class="regexp">        )</span></div><div class="line"><span class="regexp">    &#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">&#125;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">export default App</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>webpack.config.js</code><br>同样,在开始新建文件之前, 先安装相关的包.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">npm i --save webpack 或者 npm i webpack -g</div><div class="line">npm install --save-dev webpack-dev-server // webpack的服务器</div><div class="line">npm install --save-dev babel-core babel-loader  babel-preset-es2015 babel-preset-react babel-preset-stage-0</div><div class="line">npm install --save-dev css-loader postcss-loader style-loader</div><div class="line">npm install --save-dev autoprefixer</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><code>-g</code>是全局安装,执行打包命令的时候直接<code>webpack</code>就好了.如果是<code>--save</code>安装,就需要打包的时候使用 <code>node_modules/.bin/webpack</code>.在这里,我们安装了<code>webpack</code>以及<code>bable</code>家族.(利用bable去转换es6,去转换jsx, …).还有<code>css</code>相关的处理.</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// webpack.config.js</span></div><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    entry: [<span class="string">'webpack/hot/dev-server'</span>, __dirname + <span class="string">"/index.js"</span>],</div><div class="line">    output: &#123;</div><div class="line">        path: __dirname + <span class="string">"/build"</span>,</div><div class="line">        filename: <span class="string">"bundle.js"</span>,</div><div class="line">        publicPath: <span class="string">"/assets/"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="built_in">module</span>: &#123;</div><div class="line">        loaders: [</div><div class="line">            &#123;</div><div class="line">                test: <span class="regexp">/\.(js|jsx)$/</span>, <span class="comment">// test 匹配js和jsx）</span></div><div class="line">                exclude: <span class="regexp">/node_modules/</span>, <span class="comment">//屏蔽不需要处理的文件</span></div><div class="line">                loader: <span class="string">'babel-loader'</span>,</div><div class="line">                query: &#123;</div><div class="line">                    <span class="string">"presets"</span>: [</div><div class="line">                        <span class="string">"react"</span>,</div><div class="line">                        <span class="string">"es2015"</span>,</div><div class="line">                        <span class="string">"stage-0"</span></div><div class="line">                    ],</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                test: <span class="regexp">/\.css$/</span>,</div><div class="line">                loader: <span class="string">'style-loader!css-loader?importLoaders=1'</span>,</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    plugins: [</div><div class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(), <span class="comment">//模块的热替换插件</span></div><div class="line">    ],</div><div class="line">    devServer: &#123;</div><div class="line">        contentBase: path.join(__dirname, <span class="string">"/public"</span>), <span class="comment">// index.html的位置</span></div><div class="line">        historyApiFallback: <span class="literal">true</span>,</div><div class="line">        inline: <span class="literal">true</span>,</div><div class="line">        port: <span class="number">3008</span>, <span class="comment">//这里写你自己想要的启动端口</span></div><div class="line">        compress: <span class="literal">true</span>,</div><div class="line">        progress: <span class="literal">true</span>,</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>好的,目前我们的<code>webpack.config.js</code>大致就是这样,现在我们还需要修改<code>package.json</code>去运行他.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// package.json</span></div><div class="line">. . .</div><div class="line"><span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</div><div class="line">    <span class="string">"build"</span>: <span class="string">"webpack"</span>,</div><div class="line">    <span class="string">"start"</span>: <span class="string">"webpack-dev-server"</span></div><div class="line">  &#125;,</div><div class="line">. . .</div></pre></td></tr></table></figure></p>
<p>现在我们可以在终端输入命令尝试.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm run build //会去构建配置,会有文件output.</div><div class="line">npm start // 启动项目.</div></pre></td></tr></table></figure></p>
<p>请确定我们的<code>index.html</code>引入了文件.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">. . .</div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/assets/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line">. . .</div></pre></td></tr></table></figure></p>
<p>不出意外,正常启动,输入<code>localhost:3008</code>之后,就会出现<code>Hello Word!</code></p>
<h3 id="加入antd"><a href="#加入antd" class="headerlink" title="加入antd"></a>加入<code>antd</code></h3><p>首先安装相关的包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install antd --save</div><div class="line">npm install babel-plugin-import --save-dev</div></pre></td></tr></table></figure></p>
<p>然后在我们的<code>webpack.config.js</code>配置使用.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// webpack.config.js</span></div><div class="line">. . .</div><div class="line">query: &#123;</div><div class="line">                    <span class="string">"presets"</span>: [</div><div class="line">                        <span class="string">"react"</span>,</div><div class="line">                        <span class="string">"es2015"</span>,</div><div class="line">                        <span class="string">"stage-0"</span></div><div class="line">                    ],</div><div class="line">                    plugins: [</div><div class="line">                        [<span class="string">"import"</span>, &#123;</div><div class="line">                            libraryName: <span class="string">"antd"</span>,</div><div class="line">                            style: <span class="string">"css"</span></div><div class="line">                        &#125;],</div><div class="line">                    ]</div><div class="line">                &#125;</div><div class="line">. . .</div></pre></td></tr></table></figure></p>
<p>然后我们尝试是否引入了<code>antd</code>.</p>
<ul>
<li><p>修改<code>App.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> MainLayout <span class="keyword">from</span> <span class="string">'./src/MainLayout'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    render() &#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">            &lt;MainLayout /&gt;</div><div class="line">        )</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> App</div></pre></td></tr></table></figure>
</li>
<li><p>src/MainLayout.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> &#123; Layout, Menu, Breadcrumb, Icon &#125; <span class="keyword">from</span> <span class="string">'antd'</span>;</div><div class="line"><span class="keyword">const</span> &#123;Header, Content, Footer, Sider&#125; = Layout;</div><div class="line"><span class="keyword">const</span> SubMenu = Menu.SubMenu;</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiderDemo</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">    state = &#123;</div><div class="line">        collapsed: <span class="literal">false</span>,</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    onCollapse = <span class="function">(<span class="params">collapsed</span>) =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(collapsed);</div><div class="line">        <span class="keyword">this</span>.setState(&#123;</div><div class="line">            collapsed</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    render() &#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">            &lt;Layout style=&#123;&#123;</div><div class="line">                minHeight: <span class="string">'100vh'</span></div><div class="line">            &#125;&#125;&gt;</div><div class="line">        &lt;Sider</div><div class="line">            collapsible</div><div class="line">            collapsed=&#123;<span class="keyword">this</span>.state.collapsed&#125;</div><div class="line">            onCollapse=&#123;<span class="keyword">this</span>.onCollapse&#125;</div><div class="line">            &gt;</div><div class="line">          &lt;div className=<span class="string">"logo"</span> /&gt;</div><div class="line">          &lt;Menu theme=<span class="string">"dark"</span> defaultSelectedKeys=&#123;[<span class="string">'1'</span>]&#125; mode=<span class="string">"inline"</span>&gt;</div><div class="line">            &lt;Menu.Item key=<span class="string">"1"</span>&gt;</div><div class="line">              &lt;Icon type=<span class="string">"pie-chart"</span> /&gt;</div><div class="line">              &lt;span&gt;Option <span class="number">1</span>&lt;<span class="regexp">/span&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>Menu.Item&gt;</div><div class="line">            &lt;Menu.Item key=<span class="string">"2"</span>&gt;</div><div class="line">              &lt;Icon type=<span class="string">"desktop"</span> /&gt;</div><div class="line">              &lt;span&gt;Option <span class="number">2</span>&lt;<span class="regexp">/span&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>Menu.Item&gt;</div><div class="line">            &lt;SubMenu</div><div class="line">            key=<span class="string">"sub1"</span></div><div class="line">            title=&#123;&lt;span&gt;<span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">type</span>=<span class="string">"user"</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>User<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&#125;</div><div class="line">            &gt;</div><div class="line">              &lt;Menu.Item key=<span class="string">"3"</span>&gt;Tom&lt;<span class="regexp">/Menu.Item&gt;</span></div><div class="line"><span class="regexp">              &lt;Menu.Item key="4"&gt;Bill&lt;/</span>Menu.Item&gt;</div><div class="line">              &lt;Menu.Item key=<span class="string">"5"</span>&gt;Alex&lt;<span class="regexp">/Menu.Item&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>SubMenu&gt;</div><div class="line">            &lt;SubMenu</div><div class="line">            key=<span class="string">"sub2"</span></div><div class="line">            title=&#123;&lt;span&gt;<span class="xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">type</span>=<span class="string">"team"</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Team<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&#125;</div><div class="line">            &gt;</div><div class="line">              &lt;Menu.Item key=<span class="string">"6"</span>&gt;Team <span class="number">1</span>&lt;<span class="regexp">/Menu.Item&gt;</span></div><div class="line"><span class="regexp">              &lt;Menu.Item key="8"&gt;Team 2&lt;/</span>Menu.Item&gt;</div><div class="line">            &lt;<span class="regexp">/SubMenu&gt;</span></div><div class="line"><span class="regexp">            &lt;Menu.Item key="9"&gt;</span></div><div class="line"><span class="regexp">              &lt;Icon type="file" /</span>&gt;</div><div class="line">              &lt;span&gt;File&lt;<span class="regexp">/span&gt;</span></div><div class="line"><span class="regexp">            &lt;/</span>Menu.Item&gt;</div><div class="line">          &lt;<span class="regexp">/Menu&gt;</span></div><div class="line"><span class="regexp">        &lt;/</span>Sider&gt;</div><div class="line">        &lt;Layout&gt;</div><div class="line">          &lt;Header style=&#123;&#123;</div><div class="line">                background: <span class="string">'#fff'</span>,</div><div class="line">                padding: <span class="number">0</span></div><div class="line">            &#125;&#125; /&gt;</div><div class="line">          &lt;Content style=&#123;&#123;</div><div class="line">                margin: <span class="string">'0 16px'</span></div><div class="line">            &#125;&#125;&gt;</div><div class="line">            &lt;Breadcrumb style=&#123;&#123;</div><div class="line">                margin: <span class="string">'16px 0'</span></div><div class="line">            &#125;&#125;&gt;</div><div class="line">              &lt;Breadcrumb.Item&gt;User&lt;<span class="regexp">/Breadcrumb.Item&gt;</span></div><div class="line"><span class="regexp">              &lt;Breadcrumb.Item&gt;Bill&lt;/</span>Breadcrumb.Item&gt;</div><div class="line">            &lt;<span class="regexp">/Breadcrumb&gt;</span></div><div class="line"><span class="regexp">            &lt;div style=&#123;&#123;</span></div><div class="line"><span class="regexp">                padding: 24,</span></div><div class="line"><span class="regexp">                background: '#fff',</span></div><div class="line"><span class="regexp">                minHeight: 360</span></div><div class="line"><span class="regexp">            &#125;&#125;&gt;</span></div><div class="line"><span class="regexp">              Bill is a cat.</span></div><div class="line"><span class="regexp">            &lt;/</span>div&gt;</div><div class="line">          &lt;<span class="regexp">/Content&gt;</span></div><div class="line"><span class="regexp">          &lt;Footer style=&#123;&#123;</span></div><div class="line"><span class="regexp">                textAlign: 'center'</span></div><div class="line"><span class="regexp">            &#125;&#125;&gt;</span></div><div class="line"><span class="regexp">            Ant Design ©2016 Created by Ant UED</span></div><div class="line"><span class="regexp">          &lt;/</span>Footer&gt;</div><div class="line">        &lt;<span class="regexp">/Layout&gt;</span></div><div class="line"><span class="regexp">      &lt;/</span>Layout&gt;</div><div class="line">        );</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> SiderDemo</div></pre></td></tr></table></figure>
</li>
</ul>
<p>然后我们<code>npm start</code>一下,应该是可以的了.</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>怎么说呢,其实这些东西都是可以找到的,但是因为版本等原因,难免会碰到一些小问题,那么我今天就凯说这半天我碰到的两个问题.</p>
<ul>
<li><code>Cannot GET /</code></li>
</ul>
<p>这个问题倒是还好,被我猜测到了,是没有运行起来,应该是说没有找到<code>index.html</code>文件,所以把服务器当前工作地址指向<code>index.html</code>坐在的文件夹下. 我们这里是在<code>public</code>文件夹下.</p>
<ul>
<li>页面空白</li>
</ul>
<p>页面空白,不显示<code>Hello Word</code>. 打开浏览器<code>console</code>发现是没有找到对应的<code>bundle.js</code>. 去<code>sources</code>里也没有对应的<code>js</code>文件.这个也有人碰到过,<a href="https://github.com/webpack/webpack-dev-server/issues/645" target="_blank" rel="external">看这个issue</a><br>所以,我们需要指定一下<code>publicPath</code>, 否则页面是找不到的.</p>
<ul>
<li><code>es6</code>语法报错</li>
</ul>
<p>出现<code>Module Build Faild</code>相关的错误.就是<code>es6</code>的语法错误.找了很久都不行,最后在一篇外文里看到了解决办法(最后会放上链接).加上<code>stage-0</code>的支持就好了.</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>目前碰到的问题就是那么多,而且这个文章只适合一点点也不懂的朋友,还有很多东西需要去处理,比如生产模式,性能优化..,所以,还得一起继续学习.</p>
<h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul>
<li><a href="https://github.com/xiaohesong/custom_react" target="_blank" rel="external">github 源码</a></li>
<li><a href="https://github.com/xiaohesong/ums/wiki/webpack%E9%85%8D%E7%BD%AE%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98" target="_blank" rel="external">github 原文</a></li>
<li><a href="http://egorsmirnov.me/2016/04/11/react-and-es6-part6.html" target="_blank" rel="external">React and ES6 - Part 6, React and ES6 Workflow with Webpack</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#初始化项目文件&quot;&gt;初始化项目文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#加入antd&quot;&gt;加入antd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#问题&quot;&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#总结&quot;&gt;总结&lt;/a&gt;&lt;/l
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>react-thunk迁到redux-saga,他们的对比</title>
    <link href="http://yoursite.com/2017/12/01/react-thunk%E8%BF%81%E5%88%B0redux-saga-%E4%BB%96%E4%BB%AC%E7%9A%84%E5%AF%B9%E6%AF%94/"/>
    <id>http://yoursite.com/2017/12/01/react-thunk迁到redux-saga-他们的对比/</id>
    <published>2017-12-01T07:33:02.000Z</published>
    <updated>2017-12-01T07:34:46.951Z</updated>
    
    <content type="html"><![CDATA[<h3 id="thunk-saga"><a href="#thunk-saga" class="headerlink" title="thunk-saga"></a>thunk-saga</h3><p>背景: 刚开始学习前端以及react.之前粗略的对比了下<code>thunk</code>以及<code>saga</code>.发现<code>thunk</code>与<code>saga</code>总体差不多,对我来说都够用,再考虑到学习成本,我还是选择使用了thunk. 但是使用thunk重构几个模块之后发现登录流程很麻烦,需要<code>promise</code>或者<code>async/wait</code>的支持才可以很好的完成登录流程,我的解决办法是在回调里调用(尝试过<code>async/promis</code>不可以,里面的步骤比较繁琐),这个很low逼,我也很不喜欢,以后维护起来会很吃力,所以决定切换到saga.</p>
<p>两者的对比,先从简单的获取数据说起(获取用户列表)<br>一: 大体相同的部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">import * as actions from &apos;../actions/users</div><div class="line">import &#123;connect&#125; from &apos;react-redux&apos;;</div><div class="line">import &#123; bindActionCreators &#125; from &apos;redux&apos;</div><div class="line">class User extends React.Component &#123;</div><div class="line">  ...</div><div class="line"></div><div class="line">&#125;</div><div class="line">const mapStateToProps = (state, ownProps) =&gt; (&#123;</div><div class="line">  users: state.users,</div><div class="line">&#125;)</div><div class="line"></div><div class="line">const mapDispatchToProps = dispatch =&gt; (&#123;</div><div class="line">    actions: bindActionCreators(actions, dispatch)</div><div class="line">&#125;)</div><div class="line"></div><div class="line">export default connect(</div><div class="line">  mapStateToProps,</div><div class="line">  mapDispatchToProps</div><div class="line">)(User)</div></pre></td></tr></table></figure></p>
<p>上面这部分就是大致相同的.</p>
<p>二: 不同点</p>
<ul>
<li>配置不同<br>saga的store配置如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ./configureStore.js</span></div><div class="line"><span class="keyword">import</span> &#123;createStore, applyMiddleware&#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</div><div class="line"><span class="keyword">import</span> thunkMiddleware <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</div><div class="line"><span class="keyword">import</span> rootReducer <span class="keyword">from</span> <span class="string">'./reducers'</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> createSagaMiddleware <span class="keyword">from</span> <span class="string">'redux-saga'</span>;</div><div class="line"><span class="keyword">import</span> rootSaga <span class="keyword">from</span> <span class="string">'./sagas'</span>;</div><div class="line"><span class="keyword">const</span> sagaMiddleware = createSagaMiddleware()</div><div class="line"><span class="comment">// let store = createStore(combineReducers);</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">configureStore</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> store = createStore(</div><div class="line">        rootReducer,</div><div class="line">        applyMiddleware(sagaMiddleware)</div><div class="line">    );</div><div class="line"></div><div class="line">    sagaMiddleware.run(rootSaga)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> store;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以发现初始化的时候就去运行 saga.</p>
<p>我们来看看saga:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ./sagas/index.js</span></div><div class="line"><span class="keyword">import</span> &#123;watchFetchUsers&#125; <span class="keyword">from</span> <span class="string">'./users'</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span>* <span class="title">rootSaga</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="comment">/*The saga is waiting for a action called LOAD_DASHBOARD to be activated */</span></div><div class="line">  <span class="keyword">yield</span> all(</div><div class="line">    [</div><div class="line">      fork(watchFetchUsers),</div><div class="line">    ]</div><div class="line">  )</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> rootSaga</div></pre></td></tr></table></figure>
<p>我们来看看watchFetchUsers</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123;put, takeEvery, call&#125; <span class="keyword">from</span> <span class="string">'redux-saga/effects'</span>;</div><div class="line"><span class="keyword">import</span> &#123;queryUsers&#125; <span class="keyword">from</span> <span class="string">'./Api'</span>;</div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> actions <span class="keyword">from</span> <span class="string">'../../actions/users'</span>;</div><div class="line"><span class="keyword">import</span> &#123;GET_USER_REQUEST&#125; <span class="keyword">from</span> <span class="string">'../../constants/users/ActionTypes'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> * <span class="title">watchFetchUsers</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">yield</span> takeEvery(GET_USER_REQUEST, getUsers)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span>* <span class="title">getUsers</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> data = <span class="keyword">yield</span> call(queryUsers);</div><div class="line">  <span class="keyword">yield</span> put(actions.queryUsersSuccess(data.users));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ./Api</span></div><div class="line"><span class="keyword">import</span> MyFetch <span class="keyword">from</span> <span class="string">'../../tools/MyFetch'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> queryUsers = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> MyFetch.get(<span class="string">`v1/users`</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>可以发现,saga里有 <code>watchFetchUsers</code>和<code>getUsers</code>.我们在<code>rootSagas</code>里是有<code>fork</code>这个<code>watchFetchUsers</code>的.然后通过<code>watchFetchUsers</code>去触发<code>getUsers</code>. 那么如何触发<code>watchFetchUsers</code>呢?我们需要改变下用户的<code>actions</code>.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// actions/users/index.js</span></div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> types <span class="keyword">from</span> constants/users/ActionTypes</div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> getUserRequest = <span class="function"><span class="params">()</span> =&gt;</span> (&#123;<span class="attr">type</span>: types.GET_USER_REQUEST&#125;)</div></pre></td></tr></table></figure>
<p>现在我们有了这个<code>action</code>, 那么我们就可以去使用他发起一个请求.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/User.js</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  ...</div><div class="line">  componentDidMount() &#123;</div><div class="line">    <span class="keyword">this</span>.props.actions.getUserRequest()</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样子他就会去执行<code>getUserRequest</code>方法,这样就会被<code>watchFetchUsers</code>给监听到,再去通过<code>type</code>(GET_USER_REQUEST)去匹配<code>getUsers</code>方法.<br>再<code>getUsers</code>方法最后有 <code>yield put(actions.queryUsersSuccess(data.users));</code>这个<code>put</code>就是相当于thunk的<code>dispatch</code>.</p>
<p>写了一天之后给我的感觉就是: thunk需要你自己去匹配需要的动作,saga是写一个监听方法,他自己去分发对应的action.<br>或许我这样的写法是不规范的,但是我还是决定先切换到<code>saga</code></p>
<h4 id="下面是一个关于登录发送短信倒计时的对比"><a href="#下面是一个关于登录发送短信倒计时的对比" class="headerlink" title="下面是一个关于登录发送短信倒计时的对比."></a>下面是一个关于登录发送短信倒计时的对比.</h4><ol>
<li><p>thunk</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> sendAuthCodeToPhone = <span class="function">(<span class="params">self, phone</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</div><div class="line">      dispatch(sendCodeStart())</div><div class="line">      MyFetch.post(<span class="string">`v1/verification_code`</span>, &#123;<span class="attr">phone</span>: phone&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span>(data.status === <span class="number">200</span>)&#123;</div><div class="line">          dispatch(snedCodeSuccess())</div><div class="line">          self.timer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">            dispatch(tick(self))</div><div class="line">          &#125;, <span class="number">1000</span>);</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">          dispatch(snedCodeFail())</div><div class="line">          message.error(data.message)</div><div class="line">        &#125;</div><div class="line">      &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> tick = <span class="function">(<span class="params">self</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">let</span> counter = self.props.login.count</div><div class="line">    <span class="keyword">if</span> (counter &lt; <span class="number">1</span>) &#123;</div><div class="line">      clearInterval(self.timer)</div><div class="line">      dispatch(timerStart())</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      dispatch(timerStop(counter))</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>saga</p>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; eventChannel, END &#125; <span class="keyword">from</span> <span class="string">'redux-saga'</span></div><div class="line"><span class="keyword">import</span> &#123;put, takeEvery, call, take, fork, takeLatest&#125; <span class="keyword">from</span> <span class="string">'redux-saga/effects'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span>* <span class="title">sendCode</span>(<span class="params">action</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> &#123;self&#125; = action</div><div class="line">  <span class="keyword">const</span> result = <span class="keyword">yield</span> call(sendCodeToPhone, action)</div><div class="line">  <span class="keyword">if</span>(result.status === <span class="number">200</span>)&#123;</div><div class="line">    <span class="keyword">yield</span> put(actions.snedCodeSuccess())</div><div class="line">    <span class="keyword">const</span> timeChannel = <span class="keyword">yield</span> call(tick, self)</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</div><div class="line">        <span class="comment">// take(END) will cause the saga to terminate by jumping to the finally block</span></div><div class="line">        <span class="keyword">let</span> seconds = <span class="keyword">yield</span> take(timeChannel)</div><div class="line">        <span class="keyword">yield</span> put(self.props.actions.timerStop(seconds))</div><div class="line">      &#125;</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">      <span class="keyword">yield</span> put(self.props.actions.timerStart())</div><div class="line">    &#125;</div><div class="line">  &#125;<span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">yield</span> put(actions.snedCodeFail())</div><div class="line">    message.error(result.message)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params">self</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> eventChannel(<span class="function"><span class="params">emitter</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">const</span> timer = setInterval( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">let</span> counter = self.props.login.count</div><div class="line">        <span class="keyword">if</span> (counter &lt; <span class="number">1</span>) &#123;</div><div class="line">          emitter(END)</div><div class="line">          clearInterval(timer)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">          emitter(counter)</div><div class="line">        &#125;</div><div class="line">      &#125;, <span class="number">1000</span>);</div><div class="line"></div><div class="line">      <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">        clearInterval(timer)</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  )</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;thunk-saga&quot;&gt;&lt;a href=&quot;#thunk-saga&quot; class=&quot;headerlink&quot; title=&quot;thunk-saga&quot;&gt;&lt;/a&gt;thunk-saga&lt;/h3&gt;&lt;p&gt;背景: 刚开始学习前端以及react.之前粗略的对比了下&lt;code&gt;thun
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
      <category term="redux-saga" scheme="http://yoursite.com/tags/redux-saga/"/>
    
  </entry>
  
  <entry>
    <title>react-redux的简单使用</title>
    <link href="http://yoursite.com/2017/12/01/react-redux%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/12/01/react-redux的简单使用/</id>
    <published>2017-12-01T07:31:17.000Z</published>
    <updated>2017-12-01T07:32:33.078Z</updated>
    
    <content type="html"><![CDATA[<p>正式接触react应该有两个月了,项目开始也有一个月了,<br>开始新项目的时候就没有打算使用redux,因为感觉学习这个的成本挺高.<br>这两天,项目第一版已经出来了,昨天下午有时间就抓紧时间看看redux相关的东西,大致有个了解,然后今天就照葫芦画瓢,把一个模块给整理了下,换成了redux.<br>在这里记录下使用,以备后需.</p>
<h3 id="react-redux"><a href="#react-redux" class="headerlink" title="react-redux"></a>react-redux</h3><p>使用前得需要安装<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i --save react-redux redux redux-thunk</div></pre></td></tr></table></figure></p>
<ol>
<li>先创建actions<br>获取用户列表的相关操作.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/actions/users/index.js</span></div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> usersTypes <span class="keyword">from</span> <span class="string">'../../constants/users/ActionTypes'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> queryUsersSuccess = <span class="function"><span class="params">users</span> =&gt;</span> (&#123; <span class="attr">type</span>: usersTypes.QUERY_USERS_SUCCESS, users &#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> queryUsers = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</div><div class="line">    MyFetch.get(<span class="string">`v1/users`</span>).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">      dispatch(queryUsersSuccess(data.users))</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// MyFetch.js</span></div><div class="line"><span class="keyword">import</span> &#123; message &#125; <span class="keyword">from</span> <span class="string">'antd'</span>;</div><div class="line"><span class="keyword">const</span> API_URL = process.env.REACT_APP_DEV_API_URL</div><div class="line"><span class="keyword">var</span> Fetch = &#123;</div><div class="line">    get(path) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">            fetch(<span class="string">`<span class="subst">$&#123;API_URL&#125;</span>/<span class="subst">$&#123;path&#125;</span>`</span>, &#123;</div><div class="line">                headers: <span class="keyword">new</span> Headers(&#123;</div><div class="line">                    <span class="string">'token'</span>: localStorage.getItem(<span class="string">"my-custom-token"</span>),</div><div class="line">                    <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</div><div class="line">                    <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</div><div class="line">                &#125;)</div><div class="line">            &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">                <span class="keyword">return</span> handleStatus(res);</div><div class="line">            &#125;)</div><div class="line">                .then(<span class="function"><span class="params">json</span> =&gt;</span> &#123;</div><div class="line">                    resolve(json);</div><div class="line">                &#125;)</div><div class="line">                .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">                    reject(err);</div><div class="line">                &#125;);</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div><div class="line">    post(params) &#123;&#125;,</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleStatus</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> errors;</div><div class="line">    <span class="keyword">switch</span> (res.status) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">200</span>:</div><div class="line">            <span class="keyword">return</span> res.json();</div><div class="line">        <span class="keyword">case</span> <span class="number">500</span>:</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">"500错误"</span>);</div><div class="line">            message.error(<span class="string">'服务器内部错误'</span>, <span class="number">5</span>)</div><div class="line">            errors = <span class="string">`<span class="subst">$&#123;res.status&#125;</span>, <span class="subst">$&#123;res.statusText&#125;</span>`</span></div><div class="line">            <span class="keyword">throw</span> errors</div><div class="line">        <span class="keyword">case</span> <span class="number">404</span>:</div><div class="line">            message.error(<span class="string">"资源不存在"</span>, <span class="number">5</span>)</div><div class="line">            errors = <span class="string">`<span class="subst">$&#123;res.status&#125;</span>, <span class="subst">$&#123;res.statusText&#125;</span>`</span></div><div class="line">            <span class="keyword">throw</span> errors</div><div class="line">        <span class="keyword">case</span> <span class="number">401</span>:</div><div class="line">            message.error(<span class="string">"登录会话过期,请重新登录"</span>, <span class="number">5</span>)</div><div class="line">            localStorage.removeItem(<span class="string">"my-custom-token"</span>)</div><div class="line">            <span class="built_in">window</span>.location.href = <span class="string">'/login'</span></div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">403</span>:</div><div class="line">            message.error(<span class="string">"无权限访问"</span>, <span class="number">5</span>)</div><div class="line">            errors = <span class="string">`<span class="subst">$&#123;res.status&#125;</span>, <span class="subst">$&#123;res.statusText&#125;</span>`</span></div><div class="line">            <span class="keyword">throw</span> errors</div><div class="line">      <span class="keyword">default</span>:</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li><p>创建constants</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/constants/users/ActionTypes.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> QUERY_USERS = <span class="string">'QUERY_USERS'</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">const</span> QUERY_USERS_SUCCESS = <span class="string">"QUERY_USERS_SUCCESS"</span></div></pre></td></tr></table></figure>
</li>
<li><p>创建 reducers相关</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/reducers/users.js</span></div><div class="line"><span class="keyword">import</span> &#123;QUERY_USERS_SUCCESS&#125; <span class="keyword">from</span> <span class="string">"../constants/users/ActionTypes"</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> initState = &#123;</div><div class="line">  users: []</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">users</span>(<span class="params">state = initState, action</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"Welcome to reducer users"</span>);</div><div class="line">    <span class="keyword">switch</span> (action.type) &#123;</div><div class="line">        <span class="keyword">case</span> QUERY_USERS_SUCCESS:</div><div class="line">          <span class="keyword">return</span> &#123;</div><div class="line">            ...state,</div><div class="line">            users: action.users</div><div class="line">          &#125;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">return</span> state</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/reducers/index.js</span></div><div class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux'</span></div><div class="line"></div><div class="line"><span class="comment">//BASE API</span></div><div class="line"><span class="keyword">import</span> users <span class="keyword">from</span> <span class="string">'./users'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> rootReducer = combineReducers(&#123;</div><div class="line">  users,</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> rootReducer</div></pre></td></tr></table></figure>
<p>这里创建了相关的reducers.</p>
<ol>
<li>在根组件store<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/index.js</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span></div><div class="line"><span class="keyword">import</span> configureStore <span class="keyword">from</span> <span class="string">'./configureStore'</span>;</div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</div><div class="line"><span class="keyword">const</span> store = configureStore()</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  &lt;Provider store=&#123;store&#125;&gt;</div><div class="line">    &lt;App /&gt;</div><div class="line">  &lt;<span class="regexp">/Provider&gt;,</span></div><div class="line"><span class="regexp">  document.getElementById('root')</span></div><div class="line"><span class="regexp">);</span></div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/configureStore.js</span></div><div class="line"><span class="keyword">import</span> &#123;createStore, applyMiddleware&#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</div><div class="line"><span class="keyword">import</span> thunkMiddleware <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</div><div class="line"><span class="keyword">import</span> rootReducer <span class="keyword">from</span> <span class="string">'./reducers'</span>;</div><div class="line"></div><div class="line"><span class="comment">// let store = createStore(combineReducers);</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">configureStore</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> store = createStore(</div><div class="line">        rootReducer,</div><div class="line">        applyMiddleware(thunkMiddleware)</div><div class="line">    );</div><div class="line"></div><div class="line">    <span class="keyword">return</span> store;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>connect<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// src/components/User.js</span></div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> UserActions <span class="keyword">from</span> <span class="string">'../../actions/users'</span>;</div><div class="line">...</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</div><div class="line">  componentDidMount()&#123;</div><div class="line">       <span class="keyword">this</span>.props.actions.queryUsers();</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</div><div class="line">  company: state.companies,</div><div class="line">	users: state.users <span class="comment">//这个是reducers定义的</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">const</span> mapDispatchToProps = <span class="function"><span class="params">dispatch</span> =&gt;</span> (&#123;</div><div class="line">    actions: bindActionCreators(UserActions, dispatch)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(</div><div class="line">  mapStateToProps,</div><div class="line">  mapDispatchToProps</div><div class="line">)(Company)</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这样就可以使用啦.</p>
<h4 id="本文原文"><a href="#本文原文" class="headerlink" title="本文原文"></a><a href="https://github.com/xiaohesong/ums/wiki/Redux%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93#react-redux" target="_blank" rel="external">本文原文</a></h4><p>ps: 目前看来,这个方法很low. 在action写了请求接口的方法,觉得不是很规范,后需会改进.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正式接触react应该有两个月了,项目开始也有一个月了,&lt;br&gt;开始新项目的时候就没有打算使用redux,因为感觉学习这个的成本挺高.&lt;br&gt;这两天,项目第一版已经出来了,昨天下午有时间就抓紧时间看看redux相关的东西,大致有个了解,然后今天就照葫芦画瓢,把一个模块给整理
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
      <category term="redux-thunk" scheme="http://yoursite.com/tags/redux-thunk/"/>
    
  </entry>
  
  <entry>
    <title>React封装Fetch获取Api, 父组件与子组件的通讯</title>
    <link href="http://yoursite.com/2017/12/01/React%E5%B0%81%E8%A3%85Fetch%E8%8E%B7%E5%8F%96Api-%E7%88%B6%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E9%80%9A%E8%AE%AF/"/>
    <id>http://yoursite.com/2017/12/01/React封装Fetch获取Api-父组件与子组件的通讯/</id>
    <published>2017-12-01T07:28:12.000Z</published>
    <updated>2017-12-01T07:29:17.117Z</updated>
    
    <content type="html"><![CDATA[<p>一个项目下来,和后台数据的交互实在是太多了,如果不封装一下就感觉怪怪的,而且也很不DRY.封装起来之后,会省事很多很多.</p>
<ul>
<li><a href="#封装fetch">封装fetch</a></li>
<li><a href="#父子组件的通讯">父子组件的通讯</a></li>
</ul>
<h3 id="封装Fetch"><a href="#封装Fetch" class="headerlink" title="封装Fetch"></a>封装Fetch</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// MyFetch.js</span></div><div class="line"><span class="keyword">const</span> API_URL = process.env.REACT_APP_DEV_API_URL</div><div class="line"><span class="keyword">var</span> methods = &#123;</div><div class="line">	get(path) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">          fetch(<span class="string">`<span class="subst">$&#123;API_URL&#125;</span>/<span class="subst">$&#123;path&#125;</span>`</span>,&#123;</div><div class="line">              headers: <span class="keyword">new</span> Headers(&#123;</div><div class="line">                  <span class="string">'my-token'</span>: <span class="string">"xxxxx..."</span>,</div><div class="line">                  <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</div><div class="line">                  <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</div><div class="line">              &#125;)</div><div class="line">          &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">            <span class="keyword">if</span> (res.ok) &#123;</div><div class="line">                <span class="keyword">return</span> res.json();</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(res.status === <span class="number">500</span>) &#123;</div><div class="line">              <span class="keyword">let</span> errors = <span class="string">`<span class="subst">$&#123;res.status&#125;</span>, <span class="subst">$&#123;res.statusText&#125;</span>`</span></div><div class="line">              <span class="keyword">throw</span> errors</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.status === <span class="number">404</span>) &#123;</div><div class="line">              <span class="keyword">let</span> errors = <span class="string">`<span class="subst">$&#123;res.status&#125;</span>, <span class="subst">$&#123;res.statusText&#125;</span>`</span></div><div class="line">              <span class="keyword">throw</span> errors</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (res.status === xxx) &#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">          &#125;)</div><div class="line">          .then(<span class="function"><span class="params">json</span> =&gt;</span> &#123;</div><div class="line">              resolve(json);</div><div class="line">          &#125;)</div><div class="line">          .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">              reject(err);</div><div class="line">          &#125;);</div><div class="line">      &#125;);</div><div class="line">    &#125;,</div><div class="line">&#125;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> methods</div></pre></td></tr></table></figure>
<p>调用的时候也很简单.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> MyFetch <span class="keyword">from</span> <span class="string">'./MyFetch'</span>;</div><div class="line">MyFetch.get(users).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"respond data is"</span>, data)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>这样就可以在Get请求的时候统一调用该接口,进行了一次封装.</p>
<h3 id="父子组件的通讯"><a href="#父子组件的通讯" class="headerlink" title="父子组件的通讯"></a>父子组件的通讯</h3><ul>
<li><p>父组件传递数据到子组件.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</div><div class="line">	render() &#123;</div><div class="line">		<span class="keyword">return</span>(</div><div class="line">			&lt;Child name=&#123;<span class="string">'issue'</span>&#125; age=<span class="string">'1'</span>/&gt;</div><div class="line">		)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">	<span class="keyword">constructor</span>(props)&#123;</div><div class="line">	    <span class="keyword">super</span>(props);</div><div class="line">	    <span class="built_in">console</span>.log(<span class="keyword">this</span>.props.name, <span class="keyword">this</span>.props.age)</div><div class="line">	    <span class="comment">//会获得对应的数据.('issue', '1')</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>子组件传递数据到父组件</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</div><div class="line">	render() &#123;</div><div class="line">		<span class="keyword">return</span>(</div><div class="line">			&lt;Child name=&#123;<span class="keyword">this</span>.name&#125; /&gt;</div><div class="line">		)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	name = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"receive name value is"</span>, value)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">	render()&#123;</div><div class="line">		<span class="keyword">return</span>(</div><div class="line">			&lt;input onChange=&#123;<span class="keyword">this</span>.handleChange&#125; /&gt;</div><div class="line">		)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	handleChange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</div><div class="line">		<span class="keyword">let</span> value = e.target.value</div><div class="line">		<span class="keyword">this</span>.props.name(value)</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样就可以把获取到的用户输入的内容传递给父组件了.</p>
<h4 id="需要注意-父组件加载子组件-子组件的构造函数只会执行一次"><a href="#需要注意-父组件加载子组件-子组件的构造函数只会执行一次" class="headerlink" title="需要注意: 父组件加载子组件,子组件的构造函数只会执行一次."></a>需要注意: 父组件加载子组件,子组件的构造函数只会执行一次.</h4><p>如果父组件(容器组件)获取远程数据,传递到子组件,不要在子组件的状态里写入数据.直接使用props.data去获取.<br>举例如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</div><div class="line">	state = &#123;</div><div class="line">		users: []</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	componentDidMount() &#123;</div><div class="line">		MyFetch.get(<span class="string">'users'</span>).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</div><div class="line">			<span class="keyword">this</span>.setState(&#123;</div><div class="line">				users: data.users</div><div class="line">			&#125;)</div><div class="line">		&#125;)</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	render() &#123;</div><div class="line">		<span class="keyword">return</span>(</div><div class="line">			&lt;Child dataSource=&#123;<span class="keyword">this</span>.state.users&#125; /&gt;</div><div class="line">		)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">	<span class="keyword">constructor</span>(props)&#123;</div><div class="line">		<span class="keyword">super</span>(props);</div><div class="line">		<span class="keyword">this</span>.state = &#123;</div><div class="line">			users: <span class="keyword">this</span>.props.users</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	render()&#123;</div><div class="line">		console.log(this.state.users) #[]</div><div class="line">		console.log(this.props.users) #[&#123;user1&#125;,&#123;user2&#125;,...]</div><div class="line">		<span class="keyword">return</span>(</div><div class="line">			&lt;table&gt;</div><div class="line">				xxx</div><div class="line">			&lt;<span class="regexp">/table&gt;</span></div><div class="line"><span class="regexp">		)</span></div><div class="line"><span class="regexp">	&#125;</span></div><div class="line"><span class="regexp">&#125;</span></div></pre></td></tr></table></figure></p>
<p>出现上面这种情况是因为父组件在获取到数据之前就已经加载了子组件.但是子组件在一个生命周期,构造函数只会执行一次.所以父组件改变状态之后,是无法再次执行子组件构造函数的内容.</p>
<h4 id="Github原文"><a href="#Github原文" class="headerlink" title="Github原文"></a><a href="https://github.com/xiaohesong/ums/wiki/React%E5%B0%81%E8%A3%85Fetch%E8%8E%B7%E5%8F%96Api,-%E7%88%B6%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E9%80%9A%E8%AE%AF#%E5%B0%81%E8%A3%85fetch" target="_blank" rel="external">Github原文</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个项目下来,和后台数据的交互实在是太多了,如果不封装一下就感觉怪怪的,而且也很不DRY.封装起来之后,会省事很多很多.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#封装fetch&quot;&gt;封装fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#父子组件的通讯&quot;&gt;父子组件
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="fetch" scheme="http://yoursite.com/tags/fetch/"/>
    
  </entry>
  
  <entry>
    <title>create-react-app按需加载以及部署</title>
    <link href="http://yoursite.com/2017/12/01/create-react-app%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E4%BB%A5%E5%8F%8A%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2017/12/01/create-react-app按需加载以及部署/</id>
    <published>2017-12-01T07:27:06.000Z</published>
    <updated>2017-12-01T07:27:38.192Z</updated>
    
    <content type="html"><![CDATA[<p>闲来无事,就想着把前几天折腾的问题重新梳理一遍,加深印象.<br><a href="http://www.jianshu.com/p/7e4533ca5707" target="_blank" rel="external">上面一篇文章</a>有提到升级<code>eject</code>的<code>cra</code>项目.为什么升级这个项目,就是想要折腾,就是想要使用到<code>webpack2</code>,还有一个好处是加深对<code>create-react-app</code>的理解.坏处不言而喻,折腾浪费生命浪费时间.</p>
<h3 id="按需加载"><a href="#按需加载" class="headerlink" title="按需加载"></a>按需加载</h3><ul>
<li><code>AsyncComponent.js</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import React, &#123; Component &#125; from &quot;react&quot;;</div><div class="line"></div><div class="line">export default function asyncComponent(importComponent) &#123;</div><div class="line">    class AsyncComponent extends Component &#123;</div><div class="line">        constructor(props) &#123;</div><div class="line">            super(props);</div><div class="line"></div><div class="line">            this.state = &#123;</div><div class="line">                component: null</div><div class="line">            &#125;;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        async componentDidMount() &#123;</div><div class="line">            const &#123; default: component &#125; = await importComponent();</div><div class="line"></div><div class="line">            this.setState(&#123;</div><div class="line">                component: component</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        render() &#123;</div><div class="line">            const Component = this.state.component;</div><div class="line"></div><div class="line">            return Component ? &lt;Component &#123;...this.props&#125; /&gt; : null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return AsyncComponent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个是异步加载组件的方法.到时在需要的组件上加入引用就好.例如在路由里.</p>
<ul>
<li><code>Menu.js</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const AsyncUser = asyncComponent(() =&gt; import(&quot;./User&quot;));</div><div class="line">...</div><div class="line">&lt;Route path=&quot;/users&quot; component=&#123;AsyncUser&#125;/&gt;</div></pre></td></tr></table></figure>
<h3 id="部署-nginx以及npm2"><a href="#部署-nginx以及npm2" class="headerlink" title="部署(nginx以及npm2)"></a>部署(nginx以及npm2)</h3><ul>
<li><p>nginx</p>
<ul>
<li><p>准备工作</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run build</div></pre></td></tr></table></figure>
</li>
<li><p><code>sudo vim /etc/nginx/sites-enabled/react-app.conf</code></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="section">server</span> &#123;</div><div class="line">    <span class="attribute">listen</span> <span class="number">7878</span>;</div><div class="line">    <span class="attribute">server_name</span> <span class="number">127.0.0.1</span>;</div><div class="line">    <span class="attribute">root</span> /home/deploy/workspace/project/build;</div><div class="line">    <span class="attribute">location</span> / &#123;</div><div class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> /index.html;</div><div class="line">        <span class="attribute">add_header</span>   Cache-Control <span class="literal">no</span>-cache;</div><div class="line">        <span class="comment">#expires      1d;</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>启用nginx配置</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service nginx reload</div><div class="line">sudo service nginx restart</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>注意<br>如果是阿里云服务器,可能访问失败,阿里云的安全策略默认是只开启了<code>80</code>端口,首先去实例里检测其他的端口是否开放.</li>
</ul>
</li>
<li><p>pm2</p>
<ul>
<li><p><code>installl and start</code></p>
  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo npm install pm2 -g</div><div class="line">pm2 start npm -- start</div></pre></td></tr></table></figure>
</li>
<li><p><code>nginx</code></p>
  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> sudo vim /etc/nginx/sites-available/react-app.conf</span></div><div class="line">server&#123;</div><div class="line">      listen 80 default_server;</div><div class="line">      server_name YOUR-SERVER-NAME;</div><div class="line">      location / &#123;</div><div class="line">        proxy_pass http://localhost:3000; #or any port number here</div><div class="line">        proxy_http_version 1.1;</div><div class="line">        proxy_set_header Upgrade $http_upgrade;</div><div class="line">        proxy_set_header Connection 'upgrade';</div><div class="line">        proxy_set_header Host $host;</div><div class="line">        proxy_cache_bypass $http_upgrade;</div><div class="line">      &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>restart</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service nginx reload</div><div class="line">sudo service nginx restart</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html" target="_blank" rel="external">Code Splitting 参考</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;闲来无事,就想着把前几天折腾的问题重新梳理一遍,加深印象.&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/7e4533ca5707&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上面一篇文章&lt;/a&gt;有提到升级&lt;code&gt;ejec
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="code splitting" scheme="http://yoursite.com/tags/code-splitting/"/>
    
  </entry>
  
  <entry>
    <title>升级Create React App的项目</title>
    <link href="http://yoursite.com/2017/09/14/%E5%8D%87%E7%BA%A7Create-React-App%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2017/09/14/升级Create-React-App的项目/</id>
    <published>2017-09-14T05:38:52.000Z</published>
    <updated>2017-09-14T05:40:04.203Z</updated>
    
    <content type="html"><![CDATA[<p>为了实现路由按需加载,因为触及到版本的相关问题(<a href="https://github.com/xiaohesong/react_blog/wiki/code-splitting" target="_blank" rel="external">版本详情</a>),所以本着折腾的原则,想去尝试升级一下,也是为了以后实践项目多知道几个坑吧.</p>
<p>情况是这的,之前也不知道版本信息的要求,直接在电脑上开搞了.用的官方的<code>create-react-app</code>.</p>
<ul>
<li><p>升级前的相关环境</p>
<ol>
<li><code>node -v</code> =&gt; 4.几的忘记了</li>
<li><code>npm -v</code> =&gt; 3.几的忘记了.</li>
<li><code>webpack version</code> =&gt; 1.14.0</li>
<li><code>react-router-dom</code> =&gt; 4.2.2</li>
<li><code>react-scripts</code> =&gt; 0.9.x</li>
</ol>
</li>
<li><p>升级后的环境.</p>
<ol>
<li><code>node -v</code> =&gt; 6.1.0</li>
<li><code>npm -v</code> =&gt; 4.6.1</li>
<li><code>webpack version</code> =&gt; 3.5.6</li>
<li><code>react-router-dom</code> =&gt; 4.2.2</li>
<li><code>react-scripts</code> =&gt; 1.0.x(3)</li>
</ol>
</li>
</ul>
<p>咋说呢,其实升级也还好,<a href="https://github.com/facebookincubator/create-react-app/releases" target="_blank" rel="external">按照官方的来就好了</a>.</p>
<p>但是,因为项目里使用了antd.三月份的时候,想接触学习<code>react</code>,就写了一个<code>Todo</code>并引入了<code>ant-design</code>.搁浅了几个月,这几天要做一个权限管理的<code>demo</code>. 所以现在的这个<code>demo</code>就按照之前的那个配置来了.那个时候是需要暴露出配置去修改.<a href="https://ant.design/docs/react/use-with-create-react-app-cn" target="_blank" rel="external">现在官方文档已经修改了</a>.<br>因为<code>eject</code>操作是不可逆的,而且作为一个新手,也是尽量避免暴露配置文件的.</p>
<p>可以发现<code>create-react-app</code>的升级文档也有强调,未<code>eject</code>的情况下.并且也在<code>issue</code>里说明了,不会提供任何帮助如果你暴露出来了配置.</p>
<blockquote>
<p>Note that we don’t provide help for webpack questions after ejecting.<br>    You can find webpack docs at <a href="https://webpack.js.org/" target="_blank" rel="external">https://webpack.js.org/</a>.</p>
</blockquote>
<h4 id="升级操作"><a href="#升级操作" class="headerlink" title="升级操作."></a>升级操作.</h4><ul>
<li>备忘</li>
<li><p>切换分支</p>
<p>切换到一个新的分支去处理升级情况.</p>
</li>
<li><p>拷贝现有配置,以防万一.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp package.json backup-package.json</div><div class="line">cp yarn.lock backup-yarn.lock</div></pre></td></tr></table></figure>
</li>
<li><p>替换需要的版本</p>
<p>找到你需要的版本的升级说明,去初始化一个新的项目(example).<a href="https://github.com/facebookincubator/create-react-app/releases/tag/v1.0.0" target="_blank" rel="external">我需要的版本是1.0.0</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev --save-exact react-scripts@1.0.0</div><div class="line">npm install -g create-react-app</div><div class="line">create-react-app example</div></pre></td></tr></table></figure>
<p>初始化项目之后,就有一个现成的你需要的版本了.<br>我们来替换一些相关的配置信息.</p>
<ul>
<li><p><code>config</code>文件夹<br>由于我的暴露出了配置信息,所以我需要把<code>~/my_project/config</code>给替换成新的版本配置.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm -rf ~/my_project/config</div><div class="line">cp -r ~/example/config/ ~/my_project/</div></pre></td></tr></table></figure>
</li>
<li><p><code>scripts</code>文件夹</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rm -rf ~/my_project/scripts</div><div class="line">cp -r ~/example/scripts/ ~/my_project/</div></pre></td></tr></table></figure>
</li>
<li><p><code>package.json</code><br>这个是<code>npm init</code>的产物.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp ~/example/package.json ~/my_project/</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注意,<code>package.json</code>里有一个地方需要改动,就是<code>name</code>,换成你的项目的名字.比如 <code>example =&gt; my_project</code>.</p>
</li>
<li><p>重新安装.<br>这里就基本把项目配置换成了新的,那么就需要重新安装相关的插件.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/my_project</div><div class="line">rm -rf node_modules</div><div class="line">npm cache clean</div><div class="line">npm install</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这里就把相关的重新安装了,那么我们也需要把项目之前的第三方库安装上去.<br>我的比较简单,只有<code>react-router-dom</code>,<code>antd</code>,<code>webpack</code>.</p>
<ul>
<li><p>番外</p>
<ul>
<li><p>遇到的问题</p>
<ul>
<li><p><code>Import in body of module; reorder to top import/first</code><br> 我的这个错误主要是<code>css</code>文件的问题.</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import A from &apos;../A.css&apos;</div><div class="line">import A from &apos;../A&apos; // A.js</div><div class="line">//改成下面这样</div><div class="line">import A from &apos;../A&apos; // A.js</div><div class="line">import A from &apos;../A.css&apos;</div></pre></td></tr></table></figure>
<p> <code>ESLint</code>的原因.</p>
</li>
<li><p>法子引入<code>antd</code><br>现在的官网的方式没法子引入<code>antd</code>,或许是因为暴露出了配置的原因吧.<br>使用的依然是<code>eject</code>之后的法子.<a href="https://github.com/xiaohesong/react_blog/wiki/How-To-Use-Ant-Design" target="_blank" rel="external">稍有变动</a></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a><a href="https://github.com/xiaohesong/react_blog/wiki/Upgrade-Create-react-app" target="_blank" rel="external">原文链接</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了实现路由按需加载,因为触及到版本的相关问题(&lt;a href=&quot;https://github.com/xiaohesong/react_blog/wiki/code-splitting&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;版本详情&lt;/a&gt;),所
    
    </summary>
    
      <category term="react" scheme="http://yoursite.com/categories/react/"/>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="create-react-app" scheme="http://yoursite.com/tags/create-react-app/"/>
    
  </entry>
  
  <entry>
    <title>docker+daocloud+rails部署管理</title>
    <link href="http://yoursite.com/2017/08/17/docker-daocloud-rails%E9%83%A8%E7%BD%B2%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2017/08/17/docker-daocloud-rails部署管理/</id>
    <published>2017-08-17T04:52:36.000Z</published>
    <updated>2017-08-17T04:54:40.494Z</updated>
    
    <content type="html"><![CDATA[<h4 id="本文将简述如何将docker放在daocloud里管理-将在上一篇的基础上阐述"><a href="#本文将简述如何将docker放在daocloud里管理-将在上一篇的基础上阐述" class="headerlink" title="本文将简述如何将docker放在daocloud里管理. 将在上一篇的基础上阐述."></a>本文将简述如何将<code>docker</code>放在<code>daocloud</code>里管理. 将在<a href="http://blog.csdn.net/hesonggg/article/details/68927265" target="_blank" rel="external">上一篇的基础上</a>阐述.</h4><h4 id="去daocloud官网注册登录账号之后-然后在用户中心代码托管里绑定git账号"><a href="#去daocloud官网注册登录账号之后-然后在用户中心代码托管里绑定git账号" class="headerlink" title="去daocloud官网注册登录账号之后,然后在用户中心代码托管里绑定git账号."></a>去<a href="https://www.daocloud.io/" target="_blank" rel="external">daocloud官网</a>注册登录账号之后,然后在用户中心代码托管里绑定<code>git</code>账号.</h4><h3 id="简单操作"><a href="#简单操作" class="headerlink" title="简单操作"></a>简单操作</h3><p>1 首先创建一个项目.如<code>psp</code>, 然后选择<code>git</code> 的相关仓库.例如<code>psp</code>.(创建的项目需<code>git</code>仓库有<code>Dockerfile</code>文件.) 然后就可以创建了.</p>
<p>2 创建成功之后,可以找到<code>设置</code>,勾选<code>成功构建后设置 latest 为镜像标签</code>.<br>点击左侧的项目找到<code>psp</code>,右侧的查看详情下拉框下选择点击<code>手动触发</code>.可以选择触发的分支.我是选择了一个<code>docker</code>分支.点击确定之后便会执行.可以点击进去查看详情.一会便会构建成功.</p>
<p>3 执行成功之后,可以在镜像仓库里发现我们刚执行的结果.点击<code>部署最新版本</code>.填写应用名称选择主机,就可以进行下一步操作.</p>
<pre><code>- 选择主机 ,需要在对应的服务器添加监控,才可以检测到并选择.
- 自有主机-集群管理-添加主机.可以发现有个命令,在服务器上添加就好了.
</code></pre><p>4 然后返回第3步,添加刚添加的主机.点击下一步.进去之后可以先不做配置,直接点击<code>立即部署</code>.这个时候会跳转到容器的日志部分.等待部署成功,即状态为<code>运行中</code> 这个时候我们就完成了一个简单的配置.</p>
<h3 id="多个容器的操作"><a href="#多个容器的操作" class="headerlink" title="多个容器的操作"></a>多个容器的操作</h3><h5 id="上面我们完成了一个简单的容器启动-不过一个应用下来-有很多容器需要启动配置"><a href="#上面我们完成了一个简单的容器启动-不过一个应用下来-有很多容器需要启动配置" class="headerlink" title="上面我们完成了一个简单的容器启动.不过一个应用下来,有很多容器需要启动配置."></a>上面我们完成了一个简单的容器启动.不过一个应用下来,有很多容器需要启动配置.</h5><ul>
<li><p>自有主机-应用<br>  在这里我们可以找到之前创建的一个容器.这个容器里有配置,有YAML.有日志,不过这个还只是一个单独的容器,我们需要应用其他的容易.<br>  注意, 容器内部的这个<code>yml</code>只是针对单个容器的配置,并不类似于<code>docker-compose.yml</code>, 我们来尝试在<code>daocloud</code>里配置<code>docker</code>的<code>compose</code>.</p>
</li>
<li><p>自有主机-Stack</p>
</li>
</ul>
<ol>
<li><code>创建新Stack</code>,输入名称,如: <code>psp-compose</code>,这里你自定义.</li>
<li>这里的<code>yml</code>配置值得注意,虽然<code>stack</code>的作用和<code>docker-compose</code>类似,但是语法方面还是有些细微的差别.<br>例如,我们直接在<code>docker-compose.yml</code>里可以对<code>Dockerfile</code>进行<code>build</code>或者指定<code>Dockerfile</code>进行<code>build</code>.但是这里就不行,这里<code>build</code>需要替换成<code>image</code>.下面是我的<code>stack</code>的例子.</li>
</ol>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="attr">version:</span> <span class="string">'2'</span></div><div class="line"><span class="attr">services:</span></div><div class="line"><span class="attr">  app:</span></div><div class="line"><span class="attr">    image:</span> <span class="string">daocloud.io/xiaohesong/psp_staging:latest</span> <span class="comment">#这个是你构建的镜像.</span></div><div class="line"><span class="attr">    command:</span> <span class="string">/bin/bash</span> <span class="string">start_up.sh</span></div><div class="line"><span class="attr">    privileged:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    restart:</span> <span class="string">always</span></div><div class="line"><span class="attr">    links:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">postgres</span></div><div class="line"><span class="bullet">    -</span> <span class="string">redis</span></div><div class="line"><span class="attr">    ports:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">'3000'</span></div><div class="line"><span class="attr">    environment:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">VIRTUAL_HOST=ip</span> <span class="comment">#这个是nginx-proxy镜像的一个方法.为你配置nginx.</span></div><div class="line"><span class="bullet">    -</span><span class="string">SECRET_KEY_BASE=</span> <span class="string">xxxxxxxxx</span></div><div class="line"><span class="attr">    volumes:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">/rails/data/log:/home/issue/www/psp/log</span></div><div class="line"><span class="attr">  web:</span></div><div class="line"><span class="attr">    image:</span> <span class="string">daocloud.io/daocloud/nginx-proxy</span></div><div class="line"><span class="attr">    ports:</span></div><div class="line"><span class="bullet">    -</span> <span class="number">80</span><span class="string">:80</span></div><div class="line"><span class="attr">    links:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">app</span></div><div class="line"><span class="attr">    volumes:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">/var/run/docker.sock:/tmp/docker.sock:ro</span></div><div class="line"><span class="attr">  postgres:</span></div><div class="line"><span class="attr">    image:</span> <span class="attr">postgres:9.4</span></div><div class="line"><span class="attr">    ports:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">'5432'</span></div><div class="line"><span class="attr">    volumes:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">/rails/main-database:/var/lib/postgresql/data</span></div><div class="line"><span class="attr">  redis:</span></div><div class="line"><span class="attr">    image:</span> <span class="attr">redis:3.0.5</span></div><div class="line"><span class="attr">    ports:</span></div><div class="line"><span class="bullet">    -</span> <span class="number">6379</span><span class="string">:6379</span></div><div class="line"><span class="attr">    volumes:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">/rails/cache-database:/var/lib/redis/data</span></div></pre></td></tr></table></figure>
<ul>
<li>这里的<code>nginx</code>镜像是<code>nginx-proxy</code>. 他提供了一个<code>VIRTUAL_HOST</code>变量,会根据指定这个变量所在的容器去配置<code>nginx</code>的配置信息.如果不用这个,自己又需要配置<code>nginx</code>的信息,例如<a href="http://blog.csdn.net/hesonggg/article/details/68927265" target="_blank" rel="external">上一篇文章</a>的<code>nginx</code>,需要指定相关的配置,去指定<code>Dockerfile-nginx</code>. 这样可能就需要你去创建一个镜像.类似<code>psp</code>,自己构建一个镜像到<code>daocloud</code>,然后再指定构造的镜像.</li>
</ul>
<p>-<br>创建<code>Stack</code>的时候,把这个写在<code>yml</code>文件里(因项目差异,这里有些需要你自己去更改.),然后选择主机创建部署,会跳转到日志,等待完成.<br>完成之后会发现,在<code>自有主机-应用</code>里创建了我们在<code>Stack</code>里加的相关容器.</p>
<p><code>docker</code>和<code>daocloud</code>的大体流程类似这样,具体的细节还是需要去完善.</p>
<h4 id="番外-比较坑的地方"><a href="#番外-比较坑的地方" class="headerlink" title="番外: 比较坑的地方"></a>番外: 比较坑的地方</h4><ul>
<li>服务器<br>之前阿里活动,9块钱半年的服务器搞了一台.发现配置好了站点之后,<code>ip</code>访问不了. 服务器上访问是ok的.</li>
</ul>
<p>解决方案:<br>进入阿里云控制台 –&gt; 云服务器 ECS –&gt; 网络和安全 –&gt; 安全组 –&gt; 配置规则 –&gt; 快速创建规则<br>在里面选择<code>HTTP(80)</code>, <code>授权对象</code>不清楚的就直接<code>0.0.0.0/0</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;本文将简述如何将docker放在daocloud里管理-将在上一篇的基础上阐述&quot;&gt;&lt;a href=&quot;#本文将简述如何将docker放在daocloud里管理-将在上一篇的基础上阐述&quot; class=&quot;headerlink&quot; title=&quot;本文将简述如何将docker
    
    </summary>
    
      <category term="部署" scheme="http://yoursite.com/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="daocloud" scheme="http://yoursite.com/tags/daocloud/"/>
    
  </entry>
  
  <entry>
    <title>闲着无聊,我们来一起科学上网</title>
    <link href="http://yoursite.com/2017/08/09/%E9%97%B2%E7%9D%80%E6%97%A0%E8%81%8A-%E6%88%91%E4%BB%AC%E6%9D%A5%E4%B8%80%E8%B5%B7%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://yoursite.com/2017/08/09/闲着无聊-我们来一起科学上网/</id>
    <published>2017-08-09T07:07:35.000Z</published>
    <updated>2017-08-09T07:20:05.210Z</updated>
    
    <content type="html"><![CDATA[<p>首先去买个大陆以外的服务器.<br><a href="https://bwh1.net/clientarea.php?action=products" target="_blank" rel="external">搬瓦工找个</a>,得用中国机房的<br>购买成功之后,会邮件通知.<br>然后登录进去,安装影梭.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. sudo apt-get update</div><div class="line">2. sudo apt-get install python-pip</div><div class="line">3. sudo pip install shadowsocks</div></pre></td></tr></table></figure></p>
<p>不出意外,会安装成功了这里.然后添加一个配置文件<br><code>sudo vim shadowsocks-conf.json</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "server":"0.0.0.0",</div><div class="line">  "server_port":8888,</div><div class="line">  "local_address":"127.0.0.1",</div><div class="line">  "local_port":1080,</div><div class="line">  "password":"这里是你的链接ss的密码",    </div><div class="line">  "timeout":600,</div><div class="line">  "method":"aes-256-cfb"</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面就是对应的配置文件,服务端配置好之后,启动<code>shadowsocks</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ssserver -c shadowsocks-conf.json -d start</div></pre></td></tr></table></figure></p>
<p>然后就是客户端了.这里主要说的是iphone.<br>注: Android可以下载到shadowsocks.但是ipone不是很好.<br>所以在App Store里下载了一个<code>wingy</code>就可以了.</p>
<h3 id="番外"><a href="#番外" class="headerlink" title="番外:"></a>番外:</h3><p>有人说最近爬墙打压的厉害.还是不知道咋回事,网速不理想.<br>准备加速试试效果.</p>
<ol>
<li><p><a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize" target="_blank" rel="external">ss加速</a></p>
</li>
<li><p><a href="https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95" target="_blank" rel="external">推荐tcp bbr</a></p>
</li>
</ol>
<ul>
<li><p>首先更新内核</p>
</li>
<li><p>开启bbr</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">modprobe tcp_bbr</div><div class="line">sudo echo "tcp_bbr" &gt;&gt; /etc/modules-load.d/modules.conf</div><div class="line"><span class="meta">#</span><span class="bash"> 我的/etc 下面没有modules-load.d. 所以直接 vim /etc/modules,然后添加 tcp_bbr.</span></div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo echo "net.core.default_qdisc=fq" &gt;&gt; /etc/sysctl.conf</div><div class="line">sudo echo "net.ipv4.tcp_congestion_control=bbr" &gt;&gt; /etc/sysctl.conf</div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sysctl -p</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先去买个大陆以外的服务器.&lt;br&gt;&lt;a href=&quot;https://bwh1.net/clientarea.php?action=products&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬瓦工找个&lt;/a&gt;,得用中国机房的&lt;br&gt;购买成功之后,会邮
    
    </summary>
    
      <category term="科学上网" scheme="http://yoursite.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="科学上网" scheme="http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Rails中的sql小记</title>
    <link href="http://yoursite.com/2017/08/07/Rails%E4%B8%AD%E7%9A%84sql%E5%B0%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/08/07/Rails中的sql小记/</id>
    <published>2017-08-07T05:47:03.000Z</published>
    <updated>2017-08-10T01:18:21.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Rails中的Sql小记"><a href="#Rails中的Sql小记" class="headerlink" title="Rails中的Sql小记"></a>Rails中的Sql小记</h2><h3 id="关于join"><a href="#关于join" class="headerlink" title="关于join"></a>关于<code>join</code></h3><h4 id="sql中的join"><a href="#sql中的join" class="headerlink" title="sql中的join"></a><code>sql</code>中的<code>join</code></h4><ul>
<li><p><code>left join</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> store_name) <span class="keyword">from</span> scores <span class="keyword">left</span> <span class="keyword">join</span> stores <span class="keyword">on</span> scores.scoreable_id = stores.id <span class="keyword">and</span> scores.scoreable_type = <span class="string">'Store'</span> <span class="keyword">where</span> store.status = <span class="number">0</span> <span class="keyword">and</span> scores.user_type=<span class="number">0</span>;</div><div class="line"># 这个是查询 所有带有评分的门店,并且门店是营业状态(0)和评分的类型是用户评分(0)</div></pre></td></tr></table></figure>
</li>
<li><p><code>right join</code><br>和<code>left join</code>差不多.不过这个是以右表全表为基础进行处理.</p>
</li>
<li><p><code>inner join</code></p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="string">`companies`</span>.* <span class="keyword">FROM</span> <span class="string">`companies`</span> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`departments`</span> <span class="keyword">ON</span> <span class="string">`departments`</span>.<span class="string">`company_id`</span> = <span class="string">`companies`</span>.<span class="string">`id`</span></div></pre></td></tr></table></figure>
<h4 id="rails中的join"><a href="#rails中的join" class="headerlink" title="rails中的join"></a><code>rails</code>中的<code>join</code></h4><ul>
<li><code>joins</code><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Company.joins(<span class="symbol">:departments</span>).to_sql</div><div class="line"><span class="comment"># =&gt; SELECT `companies`.* FROM `companies` INNER JOIN `departments` ON `departments`.`company_id` = `companies`.`id`</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以发现,<code>rails</code>中的<code>joins</code>对应<code>sql</code>中的<code>inner join</code>.</p>
<ul>
<li><code>includes</code></li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Company.includes(<span class="symbol">:departments</span>).where(<span class="symbol">departments:</span> &#123;<span class="symbol">department_name:</span> <span class="string">'#'</span>&#125;).first</div><div class="line"><span class="comment"># =&gt; SELECT  DISTINCT `companies`.`id`, `companies`.`id` AS alias_0 FROM `companies` LEFT OUTER JOIN `departments` ON `departments`.`company_id` = `companies`.`id` WHERE `departments`.`department_name` = '#'  ORDER BY `companies`.`id` ASC LIMIT 1</span></div></pre></td></tr></table></figure>
<p>可以发现,有一个<code>LEFT OUTER JOIN</code>.是不是和<code>left join</code>很像.</p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><h5 id="对应的关系"><a href="#对应的关系" class="headerlink" title="对应的关系"></a>对应的关系</h5><ol>
<li><code>join</code>就是<code>inner join</code>, <code>inner</code>是可选的.</li>
<li><code>left outer join</code>就是<code>left join</code>, <code>outer</code>是可选的.</li>
<li>具体的可<a href="https://stackoverflow.com/questions/406294/left-join-vs-left-outer-join-in-sql-server" target="_blank" rel="external">查看此链接</a></li>
</ol>
<h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><ul>
<li><code>sum</code></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SUM(CASE WHEN num &gt; 0 THEN 1 else 0 END) AS available_times</div></pre></td></tr></table></figure>
<ul>
<li><p><code>round</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ROUND('123.654',2)</div><div class="line"># 123.654 取小数后两位</div></pre></td></tr></table></figure>
</li>
<li><p><code>GROUP_CONCAT/CONCAT</code><br>返回拼接的字符串. GROUP_CONCAT与group by配合使用,效果更佳.</p>
</li>
</ul>
<p><a href="https://github.com/xiaohesong/TIL/issues/6" target="_blank" rel="external">原文链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Rails中的Sql小记&quot;&gt;&lt;a href=&quot;#Rails中的Sql小记&quot; class=&quot;headerlink&quot; title=&quot;Rails中的Sql小记&quot;&gt;&lt;/a&gt;Rails中的Sql小记&lt;/h2&gt;&lt;h3 id=&quot;关于join&quot;&gt;&lt;a href=&quot;#关于join&quot;
    
    </summary>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>使用monit监控rails应用</title>
    <link href="http://yoursite.com/2017/08/04/%E4%BD%BF%E7%94%A8monit%E7%9B%91%E6%8E%A7rails%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2017/08/04/使用monit监控rails应用/</id>
    <published>2017-08-04T07:28:51.000Z</published>
    <updated>2017-08-08T06:46:07.512Z</updated>
    
    <content type="html"><![CDATA[<p>monit的安装，ubuntu可以直接安装</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install monit</div></pre></td></tr></table></figure>
<p>这样就安装好了．然后我们看下配置文件,在 <code>/etc/monit/monitrc</code> :</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Monit control file</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Comments begin with a '#' and extend through the end of the line. Keywords</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># are case insensitive. All path's MUST BE FULLY QUALIFIED, starting with '/'.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Below you will find examples of some frequently used statements. For</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># information about the control file and a complete list of statements and</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># options, please have a look in the Monit manual.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Global section</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Start Monit in the background (run as a daemon):</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">  set daemon 30           # check services at 2-minute intervals, current is 30 second</div><div class="line"><span class="meta">#</span><span class="bash">   with start delay 240    <span class="comment"># optional: delay the first check by 4-minutes (by</span></span></div><div class="line"><span class="meta">#</span><span class="bash">                           <span class="comment"># default Monit check immediately after Monit start)</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Set syslog logging with the 'daemon' facility. If the FACILITY option is</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># omitted, Monit will use 'user' facility by default. If you want to log to</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># a standalone log file instead, specify the full path to the log file</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> logfile syslog facility log_daemon                       </span></div><div class="line">  set logfile /var/log/monit.log</div><div class="line"></div><div class="line"><span class="meta"> #</span><span class="bash">　下面的是163的邮箱服务器,请注意端口是ssl或者非ssl情况.</span></div><div class="line"><span class="meta"> #</span><span class="bash"> <span class="built_in">set</span> mailserver smtp.163.com username <span class="string">"name@163.com"</span> password <span class="string">"pwd"</span> using sslv3</span></div><div class="line"></div><div class="line"><span class="meta">  #</span><span class="bash"> 下面的这个是万网的邮箱服务器</span></div><div class="line">   set mailserver smtp.mxhichina.com username "name@domain.com" password "pwd" using sslv3  with timeout 30 seconds</div><div class="line"><span class="meta">   #</span><span class="bash"> 这个是邮件接收者</span></div><div class="line">   set alert receive@mail.com</div><div class="line"></div><div class="line"><span class="meta">   #</span><span class="bash"> 这个是邮件格式，可以自己定义.</span></div><div class="line">   set mail-format &#123;</div><div class="line">        from: name@domain.com</div><div class="line">        subject: monit alert --  $EVENT $SERVICE</div><div class="line">        message: $EVENT Service $SERVICE</div><div class="line">                   Date:        $DATE</div><div class="line">                   Action:      $ACTION</div><div class="line">                   Host:        $HOST</div><div class="line">                   Description: $DESCRIPTION</div><div class="line"></div><div class="line">              Your faithful employee,</div><div class="line">              Monit</div><div class="line">       &#125;</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Set the location of the Monit id file which stores the unique id for the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Monit instance. The id is generated and stored on first Monit start. By</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># default the file is placed in $HOME/.monit.id.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> idfile /var/.monit.id</span></div><div class="line">  set idfile /var/lib/monit/id</div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Set the location of the Monit state file which saves monitoring states</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># on each cycle. By default the file is placed in $HOME/.monit.state. If</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># the state file is stored on a persistent filesystem, Monit will recover</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># the monitoring state across reboots. If it is on temporary filesystem, the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># state will be lost on reboot which may be convenient in some situations.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">  set statefile /var/lib/monit/state</div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Set the list of mail servers for alert delivery. Multiple servers may be</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># specified using a comma separator. If the first mail server fails, Monit</span></span></div><div class="line"><span class="meta">#</span><span class="bash"> will use the second mail server <span class="keyword">in</span> the list and so on. By default Monit uses</span></div><div class="line"><span class="meta">#</span><span class="bash"> port 25 - it is possible to override this with the PORT option.</span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># By default Monit will drop alert events if no mail servers are available.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># If you want to keep the alerts for later delivery retry, you can use the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># EVENTQUEUE statement. The base directory where undelivered alerts will be</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># stored is specified by the BASEDIR option. You can limit the maximal queue</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># size using the SLOTS option (if omitted, the queue is limited by space</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># available in the back end filesystem).</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">  set eventqueue</div><div class="line">      basedir /var/lib/monit/events # set the base directory where events will be stored</div><div class="line">      slots 100                     # optionally limit the queue size</div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Monit by default uses the following format for alerts if the the mail-format</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># statement is missing::</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># --8&lt;--</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># --8&lt;--</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># You can override this message format or parts of it, such as subject</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># or sender using the MAIL-FORMAT statement. Macros such as $DATE, etc.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># are expanded at runtime. For example, to override the sender, use:</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> mail-format &#123; from: monit@foo.bar &#125;</span></div><div class="line"><span class="meta">#</span><span class="bash"> 监控网页应用</span></div><div class="line">check system domain.com</div><div class="line">    if loadavg (1min) &gt; 4 then alert</div><div class="line">    if loadavg (5min) &gt; 2 then alert</div><div class="line">    if memory usage &gt; 75% then alert</div><div class="line">    if swap usage &gt; 25% then alert</div><div class="line">    if cpu usage (user) &gt; 70% then alert</div><div class="line">    if cpu usage (system) &gt; 30% then alert</div><div class="line">    if cpu usage (wait) &gt; 20% then alert</div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># You can set alert recipients whom will receive alerts if/when a</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># service defined in this file has errors. Alerts may be restricted on</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># events by using a filter as in the second example below.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> alert didmehh@163.com                       <span class="comment"># receive all alerts</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Do not alert when Monit start,stop or perform a user initiated action</span></span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> alert manager@foo.bar not on &#123; instance, action &#125;</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Monit has an embedded web server which can be used to view status of</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># services monitored and manage services from a web interface. See the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Monit Wiki if you want to enable SSL for the web server.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"> 监控情况在网页上可视</span></div><div class="line"> set httpd port 2812 and</div><div class="line"><span class="meta">#</span><span class="bash">    use address localhost  <span class="comment"># only accept connection from localhost</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    allow localhost        <span class="comment"># allow localhost to connect to the server and</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    allow admin:monit      <span class="comment"># require user 'admin' with password 'monit'</span></span></div><div class="line">     allow admin:monit           # allow users of group 'monit' to connect (rw)</div><div class="line"><span class="meta">#</span><span class="bash">    allow @users <span class="built_in">readonly</span>  <span class="comment"># allow users of group 'users' to connect readonly</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> monit postgresql</span></div><div class="line">check process web_postgresql with pidfile /var/run/postgresql/9.3-main.pid</div><div class="line">   start program = "/etc/init.d/postgresql start" with timeout 60 seconds</div><div class="line">   stop program = "/etc/init.d/postgresql stop"</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> monit nginx</span></div><div class="line">check process web_nginx with pidfile /run/nginx.pid</div><div class="line">   start program = "/etc/init.d/nginx start" with timeout 60 seconds</div><div class="line">   stop program = "/etc/init.d/nginx stop"</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> monit redis</span></div><div class="line">check process web_redis with pidfile /var/run/redis_server.pid</div><div class="line">  start program = "/etc/init.d/redis_server start" with timeout 60 seconds</div><div class="line">  stop  program = "/etc/init.d/redis_server stop"</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> monit puma</span></div><div class="line">check process web_puma with pidfile /home/user/www/app/shared/tmp/pids/puma.pid</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> monit sidekiq</span></div><div class="line">check process web_sidekiq with pidfile /home/user/www/app/shared/tmp/pids/sidekiq.pid</div><div class="line"><span class="meta">#</span><span class="bash"> 监控硬盘</span></div><div class="line">check filesystem datafs with path /dev/xvda1</div><div class="line"> start program  = "/bin/mount /data"</div><div class="line"> stop program  = "/bin/umount /data"</div><div class="line"> if failed permission 660 then unmonitor</div><div class="line"> if failed uid root then unmonitor</div><div class="line"> if failed gid disk then unmonitor</div><div class="line"> if space usage &gt; 80% for 5 times within 15 cycles then alert</div><div class="line"> if space usage &gt; 99% then stop</div><div class="line"> if inode usage &gt; 30000 then alert</div><div class="line"> if inode usage &gt; 99% then stop</div><div class="line"> group server</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> 监控home空间</span></div><div class="line"><span class="meta">#</span><span class="bash">check device home with path /home/pinee</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> SPACE usage &gt; 0% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Services</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check general system resources such as load average, cpu and memory</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># usage. Each test specifies a resource, conditions and the action to be</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># performed should a test fail.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">  check system myhost.mydomain.tld</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> loadavg (1min) &gt; 4 <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> loadavg (5min) &gt; 2 <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> memory usage &gt; 75% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> swap usage &gt; 25% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> cpu usage (user) &gt; 70% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> cpu usage (system) &gt; 30% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> cpu usage (<span class="built_in">wait</span>) &gt; 20% <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check if a file exists, checksum, permissions, uid and gid. In addition</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># to alert recipients in the global section, customized alert can be sent to</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># additional recipients by specifying a local alert handler. The service may</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># be grouped using the GROUP option. More than one group can be specified by</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># repeating the 'group name' statement.</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash">  check file apache_bin with path /usr/<span class="built_in">local</span>/apache/bin/httpd</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed checksum and</span></div><div class="line"><span class="meta">#</span><span class="bash">       expect the sum 8f7f419955cefa0b33a2ba316cba3659 <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed permission 755 <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed uid root <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed gid root <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    alert security@foo.bar on &#123;</span></div><div class="line"><span class="meta">#</span><span class="bash">           checksum, permission, uid, gid, unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">        &#125; with the mail-format &#123; subject: Alarm! &#125;</span></div><div class="line"><span class="meta">#</span><span class="bash">    group server</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check that a process is running, in this case Apache, and that it respond</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># to HTTP and HTTPS requests. Check its resource usage such as cpu and memory,</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># and number of children. If the process is not running, Monit will restart</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># it by default. In case the service is restarted very often and the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># problem remains, it is possible to disable monitoring using the TIMEOUT</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># statement. This service depends on another service (apache_bin) which</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># is defined above.</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash">  check process apache with pidfile /usr/<span class="built_in">local</span>/apache/logs/httpd.pid</span></div><div class="line"><span class="meta">#</span><span class="bash">    start program = <span class="string">"/etc/init.d/httpd start"</span> with timeout 60 seconds</span></div><div class="line"><span class="meta">#</span><span class="bash">    stop program  = <span class="string">"/etc/init.d/httpd stop"</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> cpu &gt; 60% <span class="keyword">for</span> 2 cycles <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> cpu &gt; 80% <span class="keyword">for</span> 5 cycles <span class="keyword">then</span> restart</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> totalmem &gt; 200.0 MB <span class="keyword">for</span> 5 cycles <span class="keyword">then</span> restart</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> children &gt; 250 <span class="keyword">then</span> restart</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> loadavg(5min) greater than 10 <span class="keyword">for</span> 8 cycles <span class="keyword">then</span> stop</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed host www.tildeslash.com port 80 protocol http</span></div><div class="line"><span class="meta">#</span><span class="bash">       and request <span class="string">"/somefile.html"</span></span></div><div class="line"><span class="meta">#</span><span class="bash">       <span class="keyword">then</span> restart</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed port 443 <span class="built_in">type</span> tcpssl protocol http</span></div><div class="line"><span class="meta">#</span><span class="bash">       with timeout 15 seconds</span></div><div class="line"><span class="meta">#</span><span class="bash">       <span class="keyword">then</span> restart</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> 3 restarts within 5 cycles <span class="keyword">then</span> timeout</span></div><div class="line"><span class="meta">#</span><span class="bash">    depends on apache_bin</span></div><div class="line"><span class="meta">#</span><span class="bash">    group server</span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash">    </span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check filesystem permissions, uid, gid, space and inode usage. Other services,</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># such as databases, may depend on this resource and an automatically graceful</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># stop may be cascaded to them before the filesystem will become full and data</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># lost.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">  check filesystem datafs with path /dev/sdb1</span></div><div class="line"><span class="meta">#</span><span class="bash">    start program  = <span class="string">"/bin/mount /data"</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    stop program  = <span class="string">"/bin/umount /data"</span></span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed permission 660 <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed uid root <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed gid disk <span class="keyword">then</span> unmonitor</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> space usage &gt; 80% <span class="keyword">for</span> 5 <span class="built_in">times</span> within 15 cycles <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> space usage &gt; 99% <span class="keyword">then</span> stop</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> inode usage &gt; 30000 <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> inode usage &gt; 99% <span class="keyword">then</span> stop</span></div><div class="line"><span class="meta">#</span><span class="bash">    group server</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check a file's timestamp. In this example, we test if a file is older</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># than 15 minutes and assume something is wrong if its not updated. Also,</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># if the file size exceed a given limit, execute a script</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">  check file database with path /data/mydatabase.db</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed permission 700 <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed uid data <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed gid data <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> timestamp &gt; 15 minutes <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> size &gt; 100 MB <span class="keyword">then</span> <span class="built_in">exec</span> <span class="string">"/my/cleanup/script"</span> as uid dba and gid dba</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check directory permission, uid and gid.  An event is triggered if the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># directory does not belong to the user with uid 0 and gid 0.  In addition,</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># the permissions have to match the octal description of 755 (see chmod(1)).</span></span></div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Check a remote host availability by issuing a ping test and check the</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># content of a response from a web server. Up to three pings are sent and</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># connection to a port and an application level network check is performed.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash">  check host myserver with address 192.168.1.1</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed icmp <span class="built_in">type</span> <span class="built_in">echo</span> count 3 with timeout 3 seconds <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed port 3306 protocol mysql with timeout 15 seconds <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash">    <span class="keyword">if</span> failed url http://user:password@www.foo.bar:8080/?querystring</span></div><div class="line"><span class="meta">#</span><span class="bash">       and content == <span class="string">'action="j_security_check"'</span></span></div><div class="line"><span class="meta">#</span><span class="bash">       <span class="keyword">then</span> alert</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Includes</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##############################################################################</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># It is possible to include additional configuration parts from other files or</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># directories.</span></span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">   include /etc/monit/conf.d/*</div><div class="line"><span class="meta">#</span><span class="bash"></span></div></pre></td></tr></table></figure>
<ul>
<li>上面这些是基本的配置．然后我们得重新加载monit</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service monit reload</div></pre></td></tr></table></figure>
<p>-　然后重启一下</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service monit restart</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;monit的安装，ubuntu可以直接安装&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
    
    </summary>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="monit" scheme="http://yoursite.com/tags/monit/"/>
    
  </entry>
  
  <entry>
    <title>Ruby面试整理</title>
    <link href="http://yoursite.com/2017/08/04/Ruby%E9%9D%A2%E8%AF%95%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2017/08/04/Ruby面试整理/</id>
    <published>2017-08-04T07:23:18.000Z</published>
    <updated>2017-08-08T06:45:58.664Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>昨天去面试了一家公司，做了一天的车，基本上是蒙蔽状态。<br>今天有时间重新思考了一下。<br>2017-02-09</p>
<h4 id="题1"><a href="#题1" class="headerlink" title="题1:"></a>题1:</h4><ul>
<li>题1（用each实现map）</li>
</ul>
<ul>
<li>解：</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">each_for_map</span></span></div><div class="line">  a = []</div><div class="line">  <span class="keyword">self</span>.each&#123;<span class="params">|i|</span> a &lt;&lt; <span class="keyword">yield</span>(i)&#125;</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>这两天去面试，碰到了一下算法题，特此来与大家分享。</p>
<h4 id="题2"><a href="#题2" class="headerlink" title="题2:"></a>题2:</h4><ul>
<li>题1（请写个方法实现如下内容：）</li>
</ul>
<p><code>validate_string?(&quot;{}(text)&quot;) =&gt; true</code></p>
<p><code>validate_string?(&quot;{()}&quot;) =&gt; false</code></p>
<p><code>validate_string?(&quot;{()[]}&quot;) =&gt; true</code></p>
<ul>
<li>解：</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate_string?</span><span class="params">(str)</span></span></div><div class="line">  brackets = []</div><div class="line">  validate_hash = &#123;<span class="string">"&#123;"</span> =&gt; <span class="string">"&#125;"</span>, <span class="string">"("</span> =&gt; <span class="string">")"</span>, <span class="string">"["</span> =&gt; <span class="string">"]"</span>&#125;</div><div class="line">  str.each_char <span class="keyword">do</span> <span class="params">|char|</span></div><div class="line">    brackets &lt;&lt; char <span class="keyword">if</span> validate_hash.key?(char) <span class="comment">#如果存在这个key,那就追加到括号数组里。</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> validate_hash.key(char) &amp;&amp; validate_hash.key(char) != brackets.pop</div><div class="line">    <span class="comment">#如果字符串char在validate_hash中有key值并且key值不是等于数组的最后一个，那么就返回false</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  brackets.empty?</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">puts validate_string?(<span class="string">"()&#123;xiaozhu&#125;"</span>)  <span class="comment">#=&gt; true</span></div></pre></td></tr></table></figure>
<h4 id="题3："><a href="#题3：" class="headerlink" title="题3："></a>题3：</h4><ul>
<li>题2</li>
</ul>
<p>1到n的数字中，缺少一个数，随机排序在数组中，请找出这个随机的数字。</p>
<ul>
<li>解</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">missing_number</span><span class="params">(array)</span></span></div><div class="line">  max = array.max</div><div class="line">  min = array.min</div><div class="line">  (min .. max).to_a - array</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a = (<span class="number">1</span> .. <span class="number">1000</span>).to_a</div><div class="line">a.delete((<span class="number">1</span> .. <span class="number">1000</span>).to_a.sample)</div><div class="line">puts missing_number(a)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;昨天去面试了一家公司，做了一天的车，基本上是蒙蔽状态。&lt;br&gt;今天有时间重新思考了一下。&lt;br&gt;2017-02-09&lt;/p&gt;
&lt;h4 id=
    
    </summary>
    
    
      <category term="Interview" scheme="http://yoursite.com/tags/Interview/"/>
    
      <category term="ruby" scheme="http://yoursite.com/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>Build Hexo</title>
    <link href="http://yoursite.com/2017/08/04/build-hexo/"/>
    <id>http://yoursite.com/2017/08/04/build-hexo/</id>
    <published>2017-08-04T05:58:49.000Z</published>
    <updated>2017-08-08T06:46:07.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动手搭建基于Hexo的Blog"><a href="#动手搭建基于Hexo的Blog" class="headerlink" title="动手搭建基于Hexo的Blog"></a>动手搭建基于Hexo的Blog</h1><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul>
<li><a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="external">node的依赖.</a></li>
</ul>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir &lt;github-name&gt;.github.io -p</div><div class="line"><span class="built_in">cd</span> &lt;github-name&gt;.github.io</div><div class="line">sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h3 id="初始化博客框架"><a href="#初始化博客框架" class="headerlink" title="初始化博客框架"></a>初始化博客框架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo init</div><div class="line">npm install</div></pre></td></tr></table></figure>
<h3 id="初次展现"><a href="#初次展现" class="headerlink" title="初次展现"></a>初次展现</h3><p>经过上面简单的步骤,已经把基本的博客框架给搭建好了.可以查看下效果.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>然后输入 <code>localhost:4000</code>可以查看下基本的效果.<br>不过,这不是我想要的.</p>
<h2 id="美化操作"><a href="#美化操作" class="headerlink" title="美化操作"></a>美化操作</h2><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>下载主题到<code>themes</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>这样就把主题搞定了.不过要配置下.在<code>&lt;github-name.github.io&gt;</code>的<code>_config.yml</code>中找到<code>theme</code>.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next <span class="comment">#注意, 默认是landscape</span></div></pre></td></tr></table></figure></p>
<p>这里可配置文件选项较多,<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">请查看文档</a></p>
<h4 id="更多配置"><a href="#更多配置" class="headerlink" title="更多配置"></a><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">更多配置</a></h4><h2 id="提交到git"><a href="#提交到git" class="headerlink" title="提交到git"></a>提交到git</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git push origin master</div><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h4 id="git-push到github-page之后出现404-邮件反馈"><a href="#git-push到github-page之后出现404-邮件反馈" class="headerlink" title="git push到github page之后出现404.邮件反馈:"></a><code>git push</code>到<code>github page</code>之后出现404.邮件反馈:</h4><ul>
<li>First<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">The page build completed successfully, but returned the following warning for the `master` branch:</div><div class="line"></div><div class="line">You are attempting to use a Jekyll theme, "next", which is not supported by GitHub Pages. Please visit https://pages.github.com/themes/ for a list of supported themes. If you are using the "theme" configuration variable for something other than a Jekyll theme, we recommend you rename this variable throughout your site. For more information, see https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/.</div><div class="line"></div><div class="line">For information on troubleshooting Jekyll see:</div><div class="line"></div><div class="line">  https://help.github.com/articles/troubleshooting-jekyll-builds</div><div class="line"></div><div class="line">If you have any questions you can contact us by replying to this email.</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个是要指定下, <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">可以参考</a>.</p>
<ul>
<li>Second</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">The page build failed for the `master` branch with the following error:</div><div class="line"></div><div class="line">The tag `fancybox` on line 77 in `themes/landscape/README.md` is not a recognized Liquid tag. For more information, see https://help.github.com/articles/page-build-failed-unknown-tag-error/.</div><div class="line"></div><div class="line">For information on troubleshooting Jekyll see:</div><div class="line"></div><div class="line">  https://help.github.com/articles/troubleshooting-jekyll-builds</div><div class="line"></div><div class="line">If you have any questions you can contact us by replying to this email.</div></pre></td></tr></table></figure>
<p>这个也比较好解决的.去<code>themes</code>下的<code>landscape</code>删除<code>README.md</code>文件.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;动手搭建基于Hexo的Blog&quot;&gt;&lt;a href=&quot;#动手搭建基于Hexo的Blog&quot; class=&quot;headerlink&quot; title=&quot;动手搭建基于Hexo的Blog&quot;&gt;&lt;/a&gt;动手搭建基于Hexo的Blog&lt;/h1&gt;&lt;h2 id=&quot;基本操作&quot;&gt;&lt;a href
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title> Rails5.1使用jquery</title>
    <link href="http://yoursite.com/2017/06/12/Rails5-1%E4%BD%BF%E7%94%A8jquery/"/>
    <id>http://yoursite.com/2017/06/12/Rails5-1使用jquery/</id>
    <published>2017-06-12T03:21:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<p><code>rails5.1</code>的变化还真是大,对于<code>js</code>的拥抱很友好.<br><a href="http://weblog.rubyonrails.org/2017/2/23/Rails-5-1-beta1/" target="_blank" rel="external">Rails5.1变化</a></p>
<ol>
<li>前端的管理工具,类似<code>bundler</code>.</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rake <span class="symbol">yarn:</span>install</div></pre></td></tr></table></figure>
<p>ps : <a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="external">安装node</a><br>ps : <a href="https://yarnpkg.com/lang/en/docs/install/#linux-tab" target="_blank" rel="external">安装yarn</a></p>
<ol>
<li>利用<code>yarn</code>添加<code>juqery</code></li>
</ol>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn add jquery</div></pre></td></tr></table></figure>
<ol>
<li><code>application.js</code>如下<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/<span class="regexp">/= require jquery</span></div><div class="line"><span class="regexp">/</span><span class="regexp">/= require jquery_ujs</span></div><div class="line"><span class="regexp">...</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="blog原文"><a href="#blog原文" class="headerlink" title="blog原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/73089436" target="_blank" rel="external">blog原文</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;rails5.1&lt;/code&gt;的变化还真是大,对于&lt;code&gt;js&lt;/code&gt;的拥抱很友好.&lt;br&gt;&lt;a href=&quot;http://weblog.rubyonrails.org/2017/2/23/Rails-5-1-beta1/&quot; target=&quot;_blan
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
  </entry>
  
  <entry>
    <title>rails4 actioncable</title>
    <link href="http://yoursite.com/2017/05/26/rails4-actioncable/"/>
    <id>http://yoursite.com/2017/05/26/rails4-actioncable/</id>
    <published>2017-05-26T05:13:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<p>15年的时候,出了rails5,有个新特性actioncable.刚好公司有个关于推送的需求,但是Rails的版本是Rails4.想使用<code>actioncable</code>. 找了很久找到了一个可以使用的官方的gem. 16年的时候在公司项目中用了进去.<br>现在打算把这个写出来,因为好像很多人都不知道rails4有这个gem可以使用.</p>
<h3 id="actioncable"><a href="#actioncable" class="headerlink" title="actioncable"></a><a href="https://github.com/rails/actioncable/tree/archive" target="_blank" rel="external">actioncable</a></h3><p>在<code>gemfile</code>添加<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">'actioncable'</span>, <span class="symbol">github:</span> <span class="string">'rails/actioncable'</span>, <span class="symbol">branch:</span> <span class="string">'archive'</span></div></pre></td></tr></table></figure></p>
<p>ps: 为了防止作者把分支删除,可以先备份一个到自己的仓库里.</p>
<p><code>bundle</code>之后需要配置一番,这个可不像rails5那么棒,不用配置都行.<br><code>application.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"><span class="comment">//= require cable</span></div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>在<code>app</code> 文件夹下创建相关的目录<br><code>channels/application_cable/channel.rb</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">ApplicationCable</span></span></div><div class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Channel</span> &lt; ActionCable::Channel::<span class="title">Base</span></span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p><code>channels/application_cable/connection.rb</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">ApplicationCable</span></span></div><div class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Connection</span> &lt; ActionCable::Connection::<span class="title">Base</span></span></div><div class="line">    identified_by <span class="symbol">:push_store</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect</span></span></div><div class="line">      <span class="keyword">self</span>.push_store = find_verified_user.store</div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    protected</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_verified_user</span></span></div><div class="line">      session_key = Rails.application.config.session_options[<span class="symbol">:key</span>]</div><div class="line">      user_id = cookies.encrypted[session_key][<span class="string">'user_id'</span>]</div><div class="line"></div><div class="line">      <span class="keyword">if</span> verified_user = User.find_by(<span class="symbol">id:</span> user_id)</div><div class="line">        verified_user</div><div class="line">      <span class="keyword">else</span></div><div class="line">        reject_unauthorized_connection</div><div class="line">      <span class="keyword">end</span></div><div class="line"></div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="comment"># note: 因为websocket不支持session传输，所以此处需要由cookies解密</span></div></pre></td></tr></table></figure></p>
<p><code>channels/orders_channel.rb</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrdersChannel</span> &lt; ApplicationCable::Channel</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">subscribed</span></span></div><div class="line">    stream_from <span class="string">"order_channel_<span class="subst">#&#123;push_store.id&#125;</span>"</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">unsubscribed</span></span></div><div class="line">    <span class="comment"># Any cleanup needed when channel is unsubscribed</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="comment"># subscribed是连接过来发生的行为，unsubscribed是断开连接发生的行为。</span></div></pre></td></tr></table></figure></p>
<p>我们在上面将最基本的桥梁搭建好了，那么我得去创建一个消费者去使用他。 在 <code>app/javascripts/</code>下创建一个 <code>app.es6</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> App = &#123;&#125;;</div><div class="line"></div><div class="line">App.cable = Cable.createConsumer(<span class="string">`/cable`</span>);</div><div class="line"></div><div class="line">App.messaging = App.cable.subscriptions.create(<span class="string">'OrdersChannel'</span>, &#123;</div><div class="line">  received: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">    $(<span class="keyword">this</span>).trigger(<span class="string">'received'</span>, data);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>消费者创建好之后，我们需要播报一条消息，让他去监听行为并做出处理 在 <code>app/jobs</code>下创建 <code>order_broadcast_job.rb</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderBroadcastJob</span> &lt; ActiveJob::Base</span></div><div class="line">  queue_as <span class="symbol">:default</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">perform</span><span class="params">(store)</span></span></div><div class="line">    ActionCable.server.broadcast <span class="string">"order_channel_<span class="subst">#&#123;store.id&#125;</span>"</span>, &#123; <span class="symbol">message:</span> <span class="string">"message"</span>, <span class="symbol">user:</span> <span class="string">"current_user"</span> &#125;</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>可以发现，这个任务就是去向order_channel播报一条通知，可以理解为：‘我发布了一个广播，指定进入到<code>order_channel</code>. 连接上来，自然而然的触发了<code>subscribed</code>。广播指定的通道，会去匹配<code>stream_from</code>.</p>
<p>上面我们发布了一个广告有任务了，那么消费者就会积极相应，主动接收任务。 接收了任务之后，就会发生对应的行为。<code>app/javascripts/order.es6</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</div><div class="line">  $(App.messaging).on(<span class="string">'received'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event, data</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> count = <span class="number">0</span></div><div class="line">    <span class="keyword">const</span> message = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      count++;</div><div class="line">      <span class="keyword">if</span>(count%<span class="number">2</span>==<span class="number">1</span>)&#123;</div><div class="line">        <span class="built_in">document</span>.title=<span class="string">'【你有新的消息】'</span></div><div class="line">      &#125;<span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">document</span>.title=<span class="string">'【　　　　　　】'</span></div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    setInterval(message, <span class="number">800</span>)</div><div class="line"></div><div class="line">  &#125;);</div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>新建cable文件夹，与app文件夹同级 <code>cable/config.ru</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="symbol">:</span><span class="symbol">:File</span>.expand_path(<span class="string">'../../config/environment'</span>,  __FILE_<span class="number">_</span>)</div><div class="line">Rails.application.eager_load!</div><div class="line"></div><div class="line"><span class="keyword">require</span> <span class="string">'action_cable/process/logging'</span></div><div class="line"></div><div class="line">run ActionCable.server</div></pre></td></tr></table></figure></p>
<p>在<code>bin</code>文件夹下创建<code>cable</code>脚本<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash</span></div><div class="line">bundle exec puma -p <span class="number">28080</span>  cable/config.ru</div></pre></td></tr></table></figure></p>
<p>本地使用的时候,直接 <code>$bin/cable</code>就好.</p>
<p>关于部署可以参考我的笔记.<a href="https://ruby-china.org/notes/3598" target="_blank" rel="external">actioncable发布</a></p>
<h4 id="原文"><a href="#原文" class="headerlink" title="原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/72765606" target="_blank" rel="external">原文</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;15年的时候,出了rails5,有个新特性actioncable.刚好公司有个关于推送的需求,但是Rails的版本是Rails4.想使用&lt;code&gt;actioncable&lt;/code&gt;. 找了很久找到了一个可以使用的官方的gem. 16年的时候在公司项目中用了进去.&lt;br&gt;
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
  </entry>
  
  <entry>
    <title>docker+rails+postgresql+redis+puma+nginx</title>
    <link href="http://yoursite.com/2017/03/31/docker-rails-postgresql-redis-puma-nginx/"/>
    <id>http://yoursite.com/2017/03/31/docker-rails-postgresql-redis-puma-nginx/</id>
    <published>2017-03-31T09:10:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<p>看了两天的docker相关文章，就尝试把一个现有的小blog换成docker部署尝试一番．<br>前期有个疑问，capistrano一类的工具也可以很方便的部署，为什么还要docker．<br>有人说保持环境一致，这个不多做评价，不过个人感觉，rails分为三个环境，各有优势，为何要保持一致．<br>在我看来，capistrano和docker的主要区别，还是一个适合多机部署，一个适合单机部署．也有一些人说docker更适合微架构，不过我觉得多机部署也没有什么区别把，单点故障之类的都可以．<br>有些扯远了，还是言归正传吧．</p>
<p>我们首先得安装docker及相应的工具．</p>
<ul>
<li><p>安装docker</p>
  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/docker | sh</div></pre></td></tr></table></figure>
<p>  这里可以把docker添加到组里,安装成功之后会有这么一句话．<br>  <code>sudo usermod -aG docker name</code></p>
</li>
<li><p>安装docker-compose</p>
<p>  <code>curl -L https://github.com/docker/compose/releases/download/1.7.1/docker-compose-Linux-x86_64 &gt; \
/tmp/docker-compose &amp;&amp; \
chmod +x /tmp/docker-compose &amp;&amp;
sudo mv /tmp/docker-compose /usr/local/bin</code></p>
<h5 id="然后我们验证是否安装成功．"><a href="#然后我们验证是否安装成功．" class="headerlink" title="然后我们验证是否安装成功．"></a>然后我们验证是否安装成功．</h5></li>
</ul>
<p><code>docker --version
    docker-compose --version</code></p>
<p>这里主要是针对现存的项目进行处理．假设项目名称是 <code>psp</code>.<br>我们在项目主目录下新建一个文件<br><code>Dockerfile</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">FROM ruby:2.3.1　＃基本镜像</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">author info</span></div><div class="line">MAINTAINER Xiaozhu didmehh@163.com</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">基本的依赖</span></div><div class="line">RUN apt-get update &amp;&amp; apt-get install -y build-essential libpq-dev nodejs</div><div class="line"></div><div class="line">＃设置环境变量</div><div class="line">ENV RAILS_ENV production</div><div class="line">ENV RACK_ENV production</div><div class="line">上面两个是指定应用环境</div><div class="line">ENV RAILS_ROOT /home/issue/www/psp</div><div class="line">＃创建工作目录</div><div class="line">RUN mkdir -p $RAILS_ROOT</div><div class="line"></div><div class="line">＃指定工作目录</div><div class="line">WORKDIR $RAILS_ROOT</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">处理gem</span></div><div class="line">COPY Gemfile Gemfile</div><div class="line">COPY Gemfile.lock Gemfile.lock</div><div class="line">RUN gem install bundler</div><div class="line">RUN bundle install</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> 复制puma的配置</span></div><div class="line">COPY config/puma.rb config/puma.rb</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> 复制主目录</span></div><div class="line">COPY . .</div><div class="line">＃　暴露3000</div><div class="line">EXPOSE 3000</div><div class="line"></div><div class="line">＃运行shell脚本</div><div class="line">CMD bash start_up.sh</div></pre></td></tr></table></figure></p>
<h4 id="上面的是Dockerfile的基本配置．发现上面有出现-config-puma-rb-以及-start-up-sh"><a href="#上面的是Dockerfile的基本配置．发现上面有出现-config-puma-rb-以及-start-up-sh" class="headerlink" title="上面的是Dockerfile的基本配置．发现上面有出现 config/puma.rb    以及　start_up.sh."></a>上面的是Dockerfile的基本配置．发现上面有出现 <code>config/puma.rb</code>    以及　<code>start_up.sh</code>.</h4><h4 id="config-puma-rb在rails5里会自动创建，可以自己找．"><a href="#config-puma-rb在rails5里会自动创建，可以自己找．" class="headerlink" title="config/puma.rb在rails5里会自动创建，可以自己找．"></a><code>config/puma.rb</code>在rails5里会自动创建，可以自己找．</h4><h4 id="start-up-sh-内容如下："><a href="#start-up-sh-内容如下：" class="headerlink" title="start_up.sh 内容如下："></a><code>start_up.sh</code> 内容如下：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></div><div class="line"><span class="meta">#</span><span class="bash">　处理静态资源</span></div><div class="line">bundle exec rake assets:precompile</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">启动puma</span></div><div class="line">bundle exec puma -C config/puma.rb</div></pre></td></tr></table></figure>
<p>这个是基本的配置，针对rails服务．下面来看看nginx的处理．</p>
<h5 id="在主目录下创建-Dockerfile-nginx"><a href="#在主目录下创建-Dockerfile-nginx" class="headerlink" title="在主目录下创建 Dockerfile-nginx"></a>在主目录下创建 <code>Dockerfile-nginx</code></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">FROM nginx</div><div class="line"></div><div class="line">RUN apt-get update -qq &amp;&amp; apt-get -y install apache2-utils</div><div class="line"></div><div class="line">ENV RAILS_ROOT /home/issue/www/psp</div><div class="line"></div><div class="line">WORKDIR $RAILS_ROOT</div><div class="line"></div><div class="line">RUN mkdir log</div><div class="line"></div><div class="line">COPY public public/</div><div class="line"></div><div class="line">COPY config/nginx.conf /tmp/docker_example.nginx</div><div class="line">RUN envsubst '$RAILS_ROOT' &lt; /tmp/docker_example.nginx &gt; /etc/nginx/conf.d/default.conf</div><div class="line"><span class="meta">#</span><span class="bash"> RUN rm -rf /etc/nginx/sites-available/default</span></div><div class="line"><span class="meta">#</span><span class="bash"> ADD config/nginx.conf /etc/nginx/sites-enabled/nginx.conf</span></div><div class="line"></div><div class="line">EXPOSE 80</div><div class="line"></div><div class="line">CMD [ "nginx", "-g", "daemon off;" ]</div></pre></td></tr></table></figure>
<p>到这里，我们把基本的Dockerfile给创建了．<br>接下来我们需要在项目里写个nginx配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">config/nginx.conf</span></div><div class="line"></div><div class="line">upstream puma &#123;</div><div class="line">  server app:3000;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">server &#123;</div><div class="line"></div><div class="line">  listen 80;</div><div class="line"></div><div class="line">  client_max_body_size 4G;</div><div class="line">  keepalive_timeout 10;</div><div class="line"></div><div class="line">  error_page 500 502 504 /500.html;</div><div class="line">  error_page 503 @503;</div><div class="line"></div><div class="line">  server_name xiaohesong.com;</div><div class="line">  root /home/issue/www/psp/public;</div><div class="line">  try_files $uri/index.html $uri @puma;</div><div class="line"></div><div class="line">  access_log /home/issue/www/psp/log/nginx.access.log;</div><div class="line">  error_log /home/issue/www/psp/log/nginx.error.log;</div><div class="line"></div><div class="line">  location @puma &#123;</div><div class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">    proxy_set_header Host $http_host;</div><div class="line">    proxy_redirect off;</div><div class="line"></div><div class="line">    proxy_pass http://puma;</div><div class="line">    # limit_req zone=one;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  location ^~ /assets/ &#123;</div><div class="line">    gzip_static on;</div><div class="line">    expires max;</div><div class="line">    add_header Cache-Control public;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  location = /50x.html &#123;</div><div class="line">    root html;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  location = /404.html &#123;</div><div class="line">    root html;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  location @503 &#123;</div><div class="line">    error_page 405 = /system/maintenance.html;</div><div class="line">    if (-f $document_root/system/maintenance.html) &#123;</div><div class="line">      rewrite ^(.*)$ /system/maintenance.html break;</div><div class="line">    &#125;</div><div class="line">    rewrite ^(.*)$ /503.html break;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ )&#123;</div><div class="line">    return 405;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  if (-f $document_root/system/maintenance.html) &#123;</div><div class="line">    return 503;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  location ~ \.(php|html)$ &#123;</div><div class="line">    return 405;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####上面配置完了nginx以及主应用，那么我们得把他们关联起来．<br>我们需要<code>docker-compose</code><br>在主目录下创建<code>docker-compose.yml</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">version: '2'</div><div class="line">services:</div><div class="line">  app:</div><div class="line">    build: .</div><div class="line">    command: bundle exec puma -C config/puma.rb</div><div class="line">    volumes:</div><div class="line">      - .:/home/issue/www/psp</div><div class="line">    expose:</div><div class="line">      - "3000"</div><div class="line">    links:</div><div class="line">      - postgres</div><div class="line">      - redis</div><div class="line">    env_file:</div><div class="line">      - .secret.env</div><div class="line">  web:</div><div class="line">    build:</div><div class="line">      context: .</div><div class="line">      dockerfile: Dockerfile-nginx</div><div class="line">    links:</div><div class="line">      - app</div><div class="line">    ports:</div><div class="line">      - "80:80"</div><div class="line">  postgres:</div><div class="line">    image: postgres:9.4</div><div class="line">    ports:</div><div class="line">      - "5432"</div><div class="line">    volumes:</div><div class="line">      - ~/main-database:/var/lib/postgresql/data</div><div class="line">  redis:</div><div class="line">    image: redis:3.0.5</div><div class="line">    ports:</div><div class="line">      - '6379:6379'</div><div class="line">    volumes:</div><div class="line">      - ~/cache-database:/var/lib/redis/data</div></pre></td></tr></table></figure>
<ul>
<li>可以发现在redis以及postgres加上了volumes.这个是可以设置共享数据，挂在数据卷，便于持久化存储数据．</li>
<li>redis以及postgres都是直接从远程仓库拷贝下来的镜像．<a href="https://hub.docker.com/explore/" target="_blank" rel="external">hub docker</a></li>
<li><p>volumes前面的宿主机可以通过 <code>docker volume create --name cache-database</code>　来创建,如果不创建，会默认生成．可以通过 <code>docker volume ls</code> 查看.<br>设置的别名如果过多，一个个的创建很麻烦，你也可以这样处理．</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">version: '2'</div><div class="line">services:</div><div class="line">  app:</div><div class="line">    ...</div><div class="line">  ...</div><div class="line">    ...</div><div class="line">volumes:</div><div class="line">  cache-database:</div><div class="line">  main-database:</div></pre></td></tr></table></figure>
</li>
<li><p>links是把需要的服务拿过来使用．例如app作为主服务，需要持久化存储的数据库．</p>
</li>
<li><p>配置数据库的用户密码．</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">postgres:</div><div class="line">    image: postgres:9.4</div><div class="line">	...</div><div class="line">	environment:</div><div class="line">	  POSTGRES_USER: pg_user</div><div class="line">      POSTGRES_PASSWORD: secret password</div></pre></td></tr></table></figure>
</li>
<li><p>app的配置里，我们有个env_file,这个可以在主目录下创建一个.env的文件．<br>可以用来存放一些环境变量，或者可以直接shell脚本直接写文件到电脑系统配置里<br>我们这里存放的主要是secret：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SECRET_KEY_BASE=ecd694a53572357f98c4644991ef5d6e27d46a1dc18d605b7e58c7143ff0122c868b63f771788c82fe825fd6945dfa0f322ec73dddcf19d1e6c85234a66eae44</div></pre></td></tr></table></figure>
</li>
</ul>
<p>SECRET_KEY_BASE可以通过 <code>RAILS_ENV=production bundle exec rake secret</code>　生成.</p>
<h4 id="接下来配置数据库．"><a href="#接下来配置数据库．" class="headerlink" title="接下来配置数据库．"></a>接下来配置数据库．</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#config/database.yml</span></div><div class="line"></div><div class="line"><span class="symbol">default:</span> &amp;default</div><div class="line">  <span class="symbol">adapter:</span> postgresql</div><div class="line">  <span class="symbol">encoding:</span> unicode</div><div class="line">  <span class="symbol">pool:</span> <span class="number">5</span></div><div class="line">  <span class="symbol">timeout:</span> <span class="number">5000</span></div><div class="line">  <span class="symbol">username:</span> postgres</div><div class="line">  <span class="comment"># please see the update below about using hostnames to</span></div><div class="line">  <span class="comment"># access linked services via docker-compose</span></div><div class="line">  <span class="symbol">host:</span> postgres <span class="comment">#是 docker-compose.yml中的key,与app,web同列，redis同样</span></div><div class="line">  <span class="symbol">port:</span> <span class="number">5432</span></div><div class="line">  <span class="symbol">password:</span> <span class="comment">#&lt;%= ENV['POSTGRES_PASSWORD'] %&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="symbol">development:</span></div><div class="line">  &lt;&lt;: *default</div><div class="line">  <span class="symbol">database:</span> psp_dev</div><div class="line"></div><div class="line"><span class="symbol">test:</span></div><div class="line">  &lt;&lt;: *default</div><div class="line">  <span class="symbol">database:</span> psp_test</div><div class="line"></div><div class="line"><span class="symbol">production:</span></div><div class="line">  &lt;&lt;: *default</div><div class="line">  <span class="symbol">database:</span> psp_pro</div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config/redis.yml</span></div><div class="line"><span class="symbol">defaults:</span> &amp;defaults</div><div class="line">  <span class="symbol">host:</span> redis</div><div class="line">  <span class="symbol">port:</span> <span class="number">6379</span></div><div class="line"></div><div class="line"><span class="symbol">development:</span></div><div class="line">  &lt;&lt;: *defaults</div><div class="line"></div><div class="line"><span class="symbol">test:</span></div><div class="line">  &lt;&lt;: *defaults</div><div class="line"></div><div class="line"><span class="symbol">staging:</span></div><div class="line">  &lt;&lt;: *defaults</div><div class="line"></div><div class="line"><span class="symbol">production:</span></div><div class="line">  &lt;&lt;: *defaults</div></pre></td></tr></table></figure>
<p>接下来，我们构建这些个服务．</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose build</div></pre></td></tr></table></figure>
<p>这里可能需要一些时间，构建好之后，我们先启动测试一下，可以不要以守护状态运行，直接:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose up</div></pre></td></tr></table></figure></p>
<p>不出意外．可以发现启动成功．我们看下启动了哪些容器．打开一个标签页，运行以下命令查看:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps</div></pre></td></tr></table></figure>
<p>会有以下的输出：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                         NAMES</div><div class="line">f716c3ee2414        psp_web             "nginx -g 'daemon ..."   About an hour ago   Up About an hour    0.0.0.0:80-&gt;80/tcp, 443/tcp   psp_web_1</div><div class="line">57702197c38c        psp_app             "bundle exec puma ..."   About an hour ago   Up About an hour    3000/tcp                      psp_app_1</div><div class="line">415edf596c26        redis:3.0.5         "/entrypoint.sh re..."   About an hour ago   Up About an hour    0.0.0.0:6379-&gt;6379/tcp        psp_redis_1</div><div class="line">cecf281102b3        postgres:9.4        "docker-entrypoint..."   About an hour ago   Up About an hour    0.0.0.0:32770-&gt;5432/tcp       psp_postgres_1</div></pre></td></tr></table></figure></p>
<p>启动了也存在问题呀，数据库没有，那我们就创建一个数据库．<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker-compose run app rake db:create</div><div class="line">docker-compose run app rake db:migrate</div></pre></td></tr></table></figure></p>
<p>如果想删除所有的容器，可以运行下面这个命令:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rm `docker ps --no-trunc -aq`</div></pre></td></tr></table></figure></p>
<h2 id="Ps-源码"><a href="#Ps-源码" class="headerlink" title="Ps: 源码"></a>Ps: <a href="https://github.com/xiaohesong/psp/tree/docker" target="_blank" rel="external">源码</a></h2><p>###参考</p>
<ul>
<li>shell脚本推荐<a href="http://linux.vbird.org/" target="_blank" rel="external">鸟哥linux私房菜</a></li>
<li><a href="https://www.rails365.net/articles/an-zhuang-docker-yi" target="_blank" rel="external">docker基本知识参考随风的系列博客</a></li>
<li><a href="http://codepany.com/blog/rails-5-and-docker-puma-nginx/" target="_blank" rel="external">RAILS 5 AND DOCKER (PUMA, NGINX)</a></li>
<li><a href="https://docs.docker.com/compose/rails/#connect-the-database" target="_blank" rel="external">connect database</a></li>
</ul>
<p>###外传，遇到的问题:</p>
<ul>
<li><p>问题一：无法build容器.<br>执行<code>docker-compose build</code>　无法正常构建．<br><img src="http://img.blog.csdn.net/20170401113256338?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVzb25nR0c=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="如下图所示:"><br>折腾了很久，换源也不行，<a href="https://github.com/docker-library/rails/issues/43" target="_blank" rel="external">在google找到了一个类似的</a> .把代理关了就好．．．．</p>
</li>
<li><p>问题二：nginx只有　<code>welcome to nginx</code><br>没有正常启动项目，就是没有和项目绑定在一起．<br>找了很久，最后经过各种排查以及尝试．把nginx的<code>Dockerfile-nginx</code> 修改一下：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">COPY config/nginx.conf /tmp/docker_example.nginx</div><div class="line">RUN envsubst '$RAILS_ROOT' &lt; /tmp/docker_example.nginx &gt; /etc/nginx/conf.d/default.conf</div><div class="line"><span class="meta">#</span><span class="bash"> RUN rm -rf /etc/nginx/sites-available/default</span></div><div class="line"><span class="meta">#</span><span class="bash"> ADD config/nginx.conf /etc/nginx/sites-enabled/nginx.conf</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以发现下面的两行被注释了，以前习惯的把配置文件放在<code>/etc/nginx/sites-enabled/nginx.conf</code> 下面．这次就不行了．<br>这是为什么？进入nginx容器看下.<br>先找到nginx的容器id, 通过<code>docker ps</code> 查看当前运行的容器．假设输出如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CONTAINER ID     |   IMAGE       |        COMMAND         |         ...                   </div><div class="line">f716c3ee2414	 |		...		 |			...			  |			...</div></pre></td></tr></table></figure></p>
<p>然后我们进入这个容器: <code>docker exec -it f716c3ee2414 bash</code><br>进入容器之后 <code>cat /etc/nginx/nginx.conf　| grep include</code> 会发现输出一下内容：<br><code>include       /etc/nginx/mime.types;
    include /etc/nginx/conf.d/*.conf;</code><br>这个　<code>include /etc/nginx/conf.d/*.conf;</code>　是包含配置文件的路劲．都在这个下面，然而我们改的是在<code>/etc/nginx/sites-enabled/*</code> 下面．所以说，配置文件没有生效，使用的默认的default配置．</p>
<ul>
<li>问题三: 启动时出错，<code>docker-compose up</code> 出错．<br>出错是:<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ERROR: for redis  driver failed programming external connectivity on endpoint psp_redis_1 (13693b22524bf940932c25f9b7f5dac45671f68fbc04fad1a76ed08274db5699): Error starting userland proxy: listen tcp 0.0.0.0:6379: bind: address already in use</div><div class="line">Traceback (most recent call last):</div><div class="line">  File "&lt;string&gt;", line 3, in &lt;module&gt;</div><div class="line">  File "compose/cli/main.py", line 63, in main</div><div class="line">AttributeError: 'ProjectError' object has no attribute 'msg'</div><div class="line">docker-compose returned -1</div></pre></td></tr></table></figure>
</li>
</ul>
<p>显示已经存在，很怪异吧．经过排查，是因为本地的redis已经启动．关了本地的redis服务就好．<br><code>sudo service redis-server stop</code><br>然后重启，<code>docker-compose up</code>　发现不会redis出错地址绑定关系．<br>又出现一个错误．<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ERROR: Named volume "db:/var/lib/postgresql/data:rw" is used in service "db" but no declaration was found in the volumes section.</div></pre></td></tr></table></figure></p>
<p>这个是因为语法错误，如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">redis:</div><div class="line">   ...</div><div class="line">   volumes:</div><div class="line">     - cache-redis:/var/lib/redis/data</div></pre></td></tr></table></figure></p>
<p>这样就会出错，换一种写法,如下：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">volumes:</div><div class="line">  - ~/cache-redis:/var/lib/redis/data</div></pre></td></tr></table></figure>
<h3 id="Note-目前对docker知之甚少，后期会补充，有不是的地方，恳请留言，谢谢-后期会继续补充"><a href="#Note-目前对docker知之甚少，后期会补充，有不是的地方，恳请留言，谢谢-后期会继续补充" class="headerlink" title="Note: 目前对docker知之甚少，后期会补充，有不是的地方，恳请留言，谢谢! 后期会继续补充!"></a>Note: 目前对docker知之甚少，后期会补充，有不是的地方，恳请留言，谢谢! 后期会继续补充!</h3><h3 id="blog原文"><a href="#blog原文" class="headerlink" title="blog原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/68927265" target="_blank" rel="external">blog原文</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了两天的docker相关文章，就尝试把一个现有的小blog换成docker部署尝试一番．&lt;br&gt;前期有个疑问，capistrano一类的工具也可以很方便的部署，为什么还要docker．&lt;br&gt;有人说保持环境一致，这个不多做评价，不过个人感觉，rails分为三个环境，各有优
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="部署" scheme="http://yoursite.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>React和Rails</title>
    <link href="http://yoursite.com/2017/03/05/React%E5%92%8CRails/"/>
    <id>http://yoursite.com/2017/03/05/React和Rails/</id>
    <published>2017-03-05T07:37:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<p>对于rails中集成react组件有两个比较好的gem可供选择。</p>
<h3 id="1-react-rails"><a href="#1-react-rails" class="headerlink" title="1. react_rails"></a>1. <a href="https://github.com/reactjs/react-rails" target="_blank" rel="external">react_rails</a></h3><pre><code>这个gem相对简单一点,有一个很好的例子可供参考。
</code></pre><p>   <a href="https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers" target="_blank" rel="external">reactjs-a-guide-for-rails-developers</a></p>
<h3 id="2-react-on-rails"><a href="#2-react-on-rails" class="headerlink" title="2. react_on_rails"></a>2. <a href="https://github.com/shakacode/react_on_rails" target="_blank" rel="external">react_on_rails</a></h3><p>这个gem复杂些，对环境要求比较高。</p>
<p><a href="https://github.com/shakacode/react_on_rails/blob/master/docs/tutorial.md" target="_blank" rel="external">环境要求</a></p>
<ol>
<li><a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="external">nodejs</a></li>
<li><a href="https://yarnpkg.com/lang/en/docs/install/#linux-tab" target="_blank" rel="external">yarn</a></li>
<li>foreman  – gem install foreman</li>
</ol>
<p><a href="https://github.com/shakacode/react-webpack-rails-tutorial" target="_blank" rel="external">recet_on_rails example</a></p>
<p>本人使用react_rails和react_on_rails两个gem实现了同一个例子。<br>react_rails是使用coffee编写。<br>react_on_rails是使用原生的jsx编写。<br><a href="https://github.com/xiaohesong/bill" target="_blank" rel="external">源码</a></p>
<p>react_rails主文件在    <code>app/assets/javascripts/components</code> 下</p>
<p>react_on_rails主文件夹在<br><code>client/app/bundles/HelloWorld/components/records</code>下。</p>
<p>该如何选择:<br>简单的使用react_rails.<br>复杂的使用react_on_rails</p>
<h3 id="3-纯前端的React-Deomo"><a href="#3-纯前端的React-Deomo" class="headerlink" title="3. 纯前端的React Deomo"></a>3. 纯前端的React Deomo</h3><ul>
<li>主要是实现了一个简单的TODO功能。</li>
<li>UI是从bootstrsap切换成了Ant-Design.</li>
<li><a href="https://github.com/xiaohesong/react_blog" target="_blank" rel="external">react源码</a>，wiki中有介绍如何接入ant-design.其实官方文档里已经说明了如何使用。</li>
<li><a href="https://ant.design/docs/react/introduce" target="_blank" rel="external">Ant-Design官网</a></li>
</ul>
<h2 id="react-jsx语法规范"><a href="#react-jsx语法规范" class="headerlink" title="react jsx语法规范"></a><a href="https://github.com/airbnb/javascript/tree/master/react" target="_blank" rel="external">react jsx语法规范</a></h2><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ol>
<li>每次在组件中调用方法，在执行该方法时会报错找不到this(null),这个时候需要去手动绑定，在构造函数的函数里。</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(props) &#123;</div><div class="line">   <span class="keyword">super</span>(props);</div><div class="line">   <span class="keyword">this</span>.state = &#123;</div><div class="line">     name: <span class="string">'xiaozhu'</span></div><div class="line">   &#125;</div><div class="line">   <span class="keyword">this</span>.example = <span class="keyword">this</span>.example.bind(<span class="keyword">this</span>);</div><div class="line"> &#125;</div><div class="line"></div><div class="line">　　example() &#123;</div><div class="line">	<span class="comment">// do somthing</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样很麻烦吧，可以换成es6的写法：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(props) &#123;</div><div class="line">    <span class="keyword">super</span>(props);</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">	     name: <span class="string">'xiaozhu'</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">//this.example = this.example.bind(this);</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">　　example = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123;</div><div class="line">		<span class="comment">// do somthing</span></div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>这样写，就不需要自己去手动绑定了。<br><a href="https://facebook.github.io/react/docs/handling-events.html" target="_blank" rel="external">参考</a><br>具体的不是es6的效果请<a href="https://facebook.github.io/react/docs/react-without-es6.html" target="_blank" rel="external">查阅</a><br>２．　组件之间进行通信，需要在对应的组件上添加属性。</p>
<pre><code>// OneComponent
render(){
    return(
        &lt;ExampleComponent handleOperation={this.doSomthing}&gt;
    )
}

doSomthing = (param) =&gt; {
    // do somthing
}


// ExampleComponent
render(){
    return(
        &lt;h1&gt;Hi,Xiaozhu&lt;/h1&gt;
        &lt;a className=&apos;btn btn-default&apos; onClick={this.handleToUpdate}&gt;
        Update
      &lt;/a&gt;
    )
}

handleToUpdate = （e） =&gt; {
    var _this = this
    e.preventDefault();
    $.ajax({
        ...
        success: function(data){
            _this.props.handleOperation (data)
        }
    })
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于rails中集成react组件有两个比较好的gem可供选择。&lt;/p&gt;
&lt;h3 id=&quot;1-react-rails&quot;&gt;&lt;a href=&quot;#1-react-rails&quot; class=&quot;headerlink&quot; title=&quot;1. react_rails&quot;&gt;&lt;/a&gt;1. &lt;a 
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ECS服务器安装postgresql无法启动的问题</title>
    <link href="http://yoursite.com/2016/12/14/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85postgresql%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/12/14/阿里云ECS服务器安装postgresql无法启动的问题/</id>
    <published>2016-12-14T04:05:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<p>安装很简单：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install postgresql #安装这个库</div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo su postgres -c psql postgresql #这里是进入数据库下</div></pre></td></tr></table></figure>
<p>然后报错进不去。locale 语言的设置问题。如下:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">perl: warning: Setting locale failed.</div><div class="line">perl: warning: Please check that your locale settings:</div><div class="line">LANGUAGE = "unset",</div><div class="line">LC_ALL = "unset",</div><div class="line">LC_CTYPE = "UTF-8",</div><div class="line">LANG = "en_US.UTF-8"</div><div class="line">are supported and installed on your system.</div><div class="line">perl: warning: Falling back to the standard locale ("C").</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
<p>这里经过排查，可以知道是因为系统语言的问题。<br>解决方式：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo locale-gen en_US en_US.UTF-8</div><div class="line">sudo dpkg-reconfigure locales</div></pre></td></tr></table></figure>
<p>然后执行第二部尝试是否成功，如果不成功，会发现对应的<br>LC_ALL以及LC_LANGUAGE还是空的（unset）,可以这样解决：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export LANGUAGE="en_US.UTF-8"</div><div class="line">echo 'LANGUAGE="en_US.UTF-8"' &gt;&gt; /etc/default/locale</div><div class="line">echo 'LC_ALL="en_US.UTF-8"' &gt;&gt; /etc/default/locale</div></pre></td></tr></table></figure></p>
<p>设置好之后，重新登陆服务器。<br>再次尝试执行 <figure class="highlight plain"><figcaption><span>su postgres -c psql postgresql ``` 尝试登入数据库。</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">希望你能成功。很可惜，我这里是失败了。</div><div class="line">报错：</div><div class="line">```shell</div><div class="line">psql: could not connect to server: No such file or directory</div><div class="line"></div><div class="line">Is the server running locally and accepting connections on Unix domain socket&quot;/var/pgsql_socket/.s.PGSQL.5432&quot;?</div></pre></td></tr></table></figure></p>
<p>然后尝试重启postgresql服务<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service postgresql restart</div></pre></td></tr></table></figure></p>
<p>会有一个报错：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">No PostgreSQL clusters exist; see “man pg_createcluster”</div></pre></td></tr></table></figure></p>
<p>解决方式这般：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo pg_createcluster 9.3 main --start</div></pre></td></tr></table></figure></p>
<p>然后进入数据库尝试。是可以进入的。<br>进入之后，我们要改变数据库的密码</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ALTER USER postgres WITH PASSWORD 'xiaozhu';  #修改你的密码</div><div class="line">\q</div><div class="line">sudo passwd postgres #修改postgres用户的密码</div></pre></td></tr></table></figure>
<h4 id="这些是我在服务器上第一次碰到这样的问题，希望能对你有所帮助。"><a href="#这些是我在服务器上第一次碰到这样的问题，希望能对你有所帮助。" class="headerlink" title="这些是我在服务器上第一次碰到这样的问题，希望能对你有所帮助。"></a>这些是我在服务器上第一次碰到这样的问题，希望能对你有所帮助。</h4><h4 id="blog原文"><a href="#blog原文" class="headerlink" title="blog原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/53637073" target="_blank" rel="external">blog原文</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装很简单：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="pg" scheme="http://yoursite.com/tags/pg/"/>
    
  </entry>
  
  <entry>
    <title>Rails Middleware</title>
    <link href="http://yoursite.com/2016/11/16/Rails-Middleware/"/>
    <id>http://yoursite.com/2016/11/16/Rails-Middleware/</id>
    <published>2016-11-16T07:54:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Rails-Middleware"><a href="#Rails-Middleware" class="headerlink" title="Rails Middleware"></a>Rails Middleware</h3><ul>
<li>app/middleware/dalta_logger.rb</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#app/middleware/dalta_logger.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeltaLogger</span></span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(app, formatting_char = <span class="string">'='</span>, log_level = <span class="string">"info"</span>)</span></span></div><div class="line">    @app = app</div><div class="line">    @formatting_char = formatting_char</div><div class="line">    @log_level = log_level</div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">call</span> <span class="title">env</span></span></div><div class="line">    request_started_on = Time.now</div><div class="line">    @status, @headers, @response = @app.call(env)</div><div class="line">    request_ended_on = Time.now</div><div class="line"></div><div class="line">    Rails.logger.send(@log_level, @formatting_char * <span class="number">50</span>)</div><div class="line">    Rails.logger.send(@log_level, <span class="string">"Request delta time: <span class="subst">#&#123;request_ended_on - request_started_on&#125;</span> seconds."</span>)</div><div class="line">    Rails.logger.send(@log_level, @formatting_char * <span class="number">50</span>)</div><div class="line"></div><div class="line">    [@status, @headers, @response]</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<ul>
<li>config/application.rb</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.middleware.use <span class="string">"DeltaLogger"</span>, <span class="string">"*"</span>, <span class="symbol">:warn</span></div></pre></td></tr></table></figure>
<h5 id="restart-server"><a href="#restart-server" class="headerlink" title="restart server"></a>restart server</h5><h4 id="原文"><a href="#原文" class="headerlink" title="原文"></a><a href="http://ieftimov.com/writing-rails-middleware" target="_blank" rel="external">原文</a></h4><h3 id="blog原文"><a href="#blog原文" class="headerlink" title="blog原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/53187429" target="_blank" rel="external">blog原文</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Rails-Middleware&quot;&gt;&lt;a href=&quot;#Rails-Middleware&quot; class=&quot;headerlink&quot; title=&quot;Rails Middleware&quot;&gt;&lt;/a&gt;Rails Middleware&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;app/midd
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="rails" scheme="http://yoursite.com/tags/rails/"/>
    
      <category term="中间件" scheme="http://yoursite.com/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用sinatra实现简单的crud功能</title>
    <link href="http://yoursite.com/2016/11/16/%E4%BD%BF%E7%94%A8sinatra%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84crud%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2016/11/16/使用sinatra实现简单的crud功能/</id>
    <published>2016-11-16T07:53:00.000Z</published>
    <updated>2017-08-10T04:26:00.820Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Sinatra"><a href="#Sinatra" class="headerlink" title="Sinatra"></a>Sinatra</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install sinatra</div></pre></td></tr></table></figure>
<ul>
<li>hello_sinatra</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p hello_sinatra</div><div class="line">cd hello_sinatra</div></pre></td></tr></table></figure>
<p>vim hello_sinatra.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">"sinatra"</span></div><div class="line">get <span class="string">"/"</span> <span class="keyword">do</span></div><div class="line">  <span class="string">"Hello, world!"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p> 然后</p>
<h5 id="ruby-hello-sinatra-rb"><a href="#ruby-hello-sinatra-rb" class="headerlink" title="ruby hello_sinatra.rb"></a>ruby hello_sinatra.rb</h5><p>localhost:4567</p>
<p>修改hello_sinatra.rb<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">"sinatra"</span></div><div class="line">get <span class="string">"/post/:id"</span> <span class="keyword">do</span></div><div class="line">  <span class="string">"Hello, world!参数是<span class="subst">#&#123;params&#125;</span>"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>然后刷新页面，会发现，有报错，不生效。</p>
<blockquote>
<p>Note that every time we change the Ruby file, we’ll need to restart the server</p>
</blockquote>
<p>这样每次修改一下，不是很讨厌吗？？<br>shotgun可以避免这个问题。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem install shotgun</div></pre></td></tr></table></figure></p>
<p>然后启动的时候注意一下。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby hello_sinatra.rb -&gt; shotgun hello_sinatra.rb</div></pre></td></tr></table></figure></p>
<h5 id="这个时候的端口，由4567改变成了9393"><a href="#这个时候的端口，由4567改变成了9393" class="headerlink" title="这个时候的端口，由4567改变成了9393"></a>这个时候的端口，由4567改变成了9393</h5><p><a href="http://blog.roberteshleman.com/2014/06/26/creating-a-basic-web-app-with-ruby-and-sinatra/" target="_blank" rel="external">Creating a Basic Web App With Ruby and Sinatra</a></p>
<ul>
<li>build sinatra app</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir pubic-bookmarks-sinatra</div><div class="line">cd pubic-bookmarks-sinatra</div></pre></td></tr></table></figure>
<h6 id="vim-public-bookmarks-rb"><a href="#vim-public-bookmarks-rb" class="headerlink" title="vim public-bookmarks.rb"></a>vim public-bookmarks.rb</h6><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'sinatra'</span></div><div class="line">get <span class="string">'/'</span> <span class="keyword">do</span></div><div class="line"> <span class="string">"<span class="subst">#&#123;[<span class="string">'Hello'</span>, <span class="string">'Hi'</span>, <span class="string">'Hey'</span>, <span class="string">'Yo'</span>][rand(<span class="number">4</span>)]&#125;</span> World!"</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h6 id="vim-Gemfile"><a href="#vim-Gemfile" class="headerlink" title="vim Gemfile"></a>vim Gemfile</h6><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">source <span class="string">'https://rubygems.org'</span> <span class="comment">#gem源自行修改</span></div><div class="line">gem <span class="string">'sinatra'</span></div><div class="line">ruby <span class="string">'2.1.2'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Note: bundle</p>
</blockquote>
<h5 id="vim-config-ru"><a href="#vim-config-ru" class="headerlink" title="vim config.ru"></a>vim config.ru</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'./public-bookmarks'</span></div><div class="line">run Sinatra::Application</div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rackup -p <span class="number">4567</span></div></pre></td></tr></table></figure>
<ul>
<li>layout</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># public-bookmarks.rb</span></div><div class="line"><span class="keyword">require</span> <span class="string">'sinatra'</span></div><div class="line">get <span class="string">'/'</span> <span class="keyword">do</span></div><div class="line">  erb <span class="symbol">:hello_world</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p views</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#vim views/hello_world.erb</div><div class="line"><span class="tag">&lt;<span class="name">%=</span> ['<span class="attr">Hello</span>', '<span class="attr">Hi</span>', '<span class="attr">Hey</span>', '<span class="attr">Yo</span>'][<span class="attr">rand</span>(<span class="attr">4</span>)] %&gt;</span> World!</div></pre></td></tr></table></figure>
<h6 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>PublicBookmarksSinatra<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">yield</span> %&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>Use ActiveRecord</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># vim Gemfile</span></div><div class="line">gem <span class="string">'sinatra-activerecord'</span></div><div class="line">gem <span class="string">'pg'</span></div><div class="line">gem <span class="string">'rake'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Note: bundle</p>
</blockquote>
<ul>
<li>config/database.yml</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#vim database.yml</span></div><div class="line"><span class="symbol">development:</span></div><div class="line">  <span class="symbol">adapter:</span> postgresql</div><div class="line">  <span class="symbol">database:</span> public-bookmarks-sinatra_development</div><div class="line">  <span class="symbol">host:</span> localhost</div><div class="line">  <span class="symbol">username:</span> postgres</div><div class="line">  <span class="symbol">password:</span> root</div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># vim Rakefile</span></div><div class="line"><span class="keyword">require</span> <span class="string">'sinatra/activerecord/rake'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'./public-bookmarks'</span></div></pre></td></tr></table></figure>
<h5 id="然后在主文件里引入"><a href="#然后在主文件里引入" class="headerlink" title="然后在主文件里引入"></a>然后在主文件里引入</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># public-bookmarks.rb</span></div><div class="line"><span class="keyword">require</span> <span class="string">'sinatra'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'sinatra/activerecord'</span></div><div class="line">get <span class="string">'/'</span> <span class="keyword">do</span></div><div class="line">  db_time = database.connection.execute(<span class="string">'SELECT CURRENT_TIMESTAMP'</span>).first[<span class="string">'now'</span>]</div><div class="line">  request.logger.info <span class="string">"DB time is <span class="subst">#&#123;db_time&#125;</span>"</span></div><div class="line">  erb <span class="symbol">:hello_world</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h5 id="现在重新启动下试试"><a href="#现在重新启动下试试" class="headerlink" title="现在重新启动下试试"></a>现在重新启动下试试</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rake <span class="symbol">db:</span>create</div><div class="line">rackup -p <span class="number">4567</span></div></pre></td></tr></table></figure>
<h5 id="可以在后台日志看见相关的输出信息。"><a href="#可以在后台日志看见相关的输出信息。" class="headerlink" title="可以在后台日志看见相关的输出信息。"></a>可以在后台日志看见相关的输出信息。</h5><ul>
<li>Build model</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 首先指定并创建一个migration的名字为create_public_bookmarks</span></div><div class="line">rake <span class="symbol">db:</span>create_migration NAME=create_public_bookmarks</div></pre></td></tr></table></figure>
<h5 id="然后打开这个文件-并且写入相关字段"><a href="#然后打开这个文件-并且写入相关字段" class="headerlink" title="然后打开这个文件 并且写入相关字段"></a>然后打开这个文件 并且写入相关字段</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># db/migrate/YYYYMMDDHHMMSS_create_public_bookmarks.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreatePublicBookmarks</span> &lt; ActiveRecord::Migration</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></div><div class="line">    create_table <span class="symbol">:public_bookmarks</span> <span class="keyword">do</span> <span class="params">|t|</span></div><div class="line">      t.string <span class="symbol">:title</span></div><div class="line">      t.string <span class="symbol">:url</span></div><div class="line">      t.text <span class="symbol">:description</span></div><div class="line">      t.string <span class="symbol">:submitter_email</span></div><div class="line"></div><div class="line">      t.timestamps</div><div class="line">    <span class="keyword">end</span></div><div class="line">    add_index <span class="symbol">:public_bookmarks</span>, <span class="symbol">:url</span>, <span class="symbol">unique:</span> <span class="literal">true</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h5 id="执行迁移文件"><a href="#执行迁移文件" class="headerlink" title="执行迁移文件"></a>执行迁移文件</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rake <span class="symbol">db:</span>migrate</div></pre></td></tr></table></figure>
<h5 id="接下来创建-public-bookmark-model"><a href="#接下来创建-public-bookmark-model" class="headerlink" title="接下来创建 public_bookmark model"></a>接下来创建 public_bookmark model</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir models</div></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># vim models/public_bookmark.rb</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PublicBookmark</span> &lt; ActiveRecord::Base</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h5 id="接下来我们需要在主文件里指定model"><a href="#接下来我们需要在主文件里指定model" class="headerlink" title="接下来我们需要在主文件里指定model"></a>接下来我们需要在主文件里指定model</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#public-bookmarks.rb</span></div><div class="line">...</div><div class="line"><span class="keyword">require</span> <span class="string">'./models/public_bookmark'</span></div><div class="line">...</div></pre></td></tr></table></figure>
<ul>
<li>Build Controllers</li>
</ul>
<blockquote>
<p>Note: 在一些时候，我们需要类似rails的notice等闪存方式来提示信息。所以需要安装一个gem.</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Gemfile</span></div><div class="line">...</div><div class="line">gem <span class="string">'rack-flash3'</span></div><div class="line">...</div></pre></td></tr></table></figure>
<blockquote>
<p>Note: bundle</p>
</blockquote>
<h5 id="这个和model类似，需要在主文件内部指定实用。"><a href="#这个和model类似，需要在主文件内部指定实用。" class="headerlink" title="这个和model类似，需要在主文件内部指定实用。"></a>这个和model类似，需要在主文件内部指定实用。</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># public-bookmarks.rb</span></div><div class="line">...</div><div class="line"><span class="keyword">require</span> <span class="string">'./models/public_bookmark'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'rack-flash'</span></div><div class="line"></div><div class="line">enable <span class="symbol">:sessions</span></div><div class="line">use Rack::Flash</div><div class="line">...</div></pre></td></tr></table></figure>
<h5 id="基本的配置差不多就这样，接下来，可以给controller填充一些action"><a href="#基本的配置差不多就这样，接下来，可以给controller填充一些action" class="headerlink" title="基本的配置差不多就这样，接下来，可以给controller填充一些action"></a>基本的配置差不多就这样，接下来，可以给controller填充一些action</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">get <span class="string">'/public_bookmarks'</span> <span class="keyword">do</span></div><div class="line">  @public_bookmarks = PublicBookmark.all</div><div class="line">  erb <span class="symbol">:<span class="string">'public_bookmarks/index'</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">get <span class="string">'/public_bookmarks/new'</span> <span class="keyword">do</span></div><div class="line">  @public_bookmark = PublicBookmark.new</div><div class="line">  erb <span class="symbol">:<span class="string">'public_bookmarks/new'</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">get <span class="string">'/public_bookmarks/:id'</span> <span class="keyword">do</span></div><div class="line">  @public_bookmark = PublicBookmark.find(params[<span class="symbol">:id</span>])</div><div class="line">  erb <span class="symbol">:<span class="string">'public_bookmarks/show'</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">post <span class="string">'/public_bookmarks/create'</span> <span class="keyword">do</span></div><div class="line">  @public_bookmark = PublicBookmark.new(params[<span class="symbol">:public_bookmark</span>])</div><div class="line">  <span class="keyword">if</span> @public_bookmark.save</div><div class="line">    flash[<span class="symbol">:notice</span>] = <span class="string">'Public bookmark successfully created!'</span></div><div class="line">    redirect to(<span class="string">"public_bookmarks/<span class="subst">#&#123;@public_bookmark.id&#125;</span>"</span>)</div><div class="line">  <span class="keyword">else</span></div><div class="line">    erb <span class="symbol">:<span class="string">'public_bookmarks/new'</span></span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h5 id="然后就可以在views下创建一个public-bookmarks文件夹，创建对应的view"><a href="#然后就可以在views下创建一个public-bookmarks文件夹，创建对应的view" class="headerlink" title="然后就可以在views下创建一个public_bookmarks文件夹，创建对应的view."></a>然后就可以在views下创建一个public_bookmarks文件夹，创建对应的view.</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line">#views/public_bookmarks/index.erb:</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Listing public_bookmarks<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"notice"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">flash</span>[<span class="attr">:notice</span>] %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Url<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Submitter email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> @<span class="attr">public_bookmarks.each</span> <span class="attr">do</span> |<span class="attr">public_bookmark</span>| %&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">public_bookmark.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">public_bookmark.url</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">public_bookmark.description</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">public_bookmark.submitter_email</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/public_bookmarks/&lt;%= public_bookmark.id %&gt;"</span>&gt;</span></div><div class="line">            Show</div><div class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> @<span class="attr">authenticated</span> %&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/public_bookmarks/destroy/&lt;%= public_bookmark.id %&gt;"</span> <span class="attr">method</span>=<span class="string">'post'</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'submit'</span> <span class="attr">value</span>=<span class="string">'Destroy'</span> <span class="attr">onclick</span>=<span class="string">"return confirm('Are you sure?')"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/public_bookmarks/new'</span>&gt;</span></div><div class="line">  New Public Bookmark</div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">#views/public_bookmarks/show.erb:</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"notice"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">flash</span>[<span class="attr">:notice</span>] %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Title:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%=</span> @<span class="attr">public_bookmark.title</span> %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Url:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%=</span> @<span class="attr">public_bookmark.url</span> %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Description:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%=</span> @<span class="attr">public_bookmark.description</span> %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Submitter email:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%=</span> @<span class="attr">public_bookmark.submitter_email</span> %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/public_bookmarks'</span>&gt;</span></div><div class="line">  Back</div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"># views/public_bookmarks/new.erb:</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>New public_bookmark<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">erb</span> <span class="attr">:</span>'<span class="attr">public_bookmarks</span>/<span class="attr">form</span>' %&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/public_bookmarks'</span>&gt;</span></div><div class="line">  Back</div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># views/public_bookmarks/form.erb:</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/public_bookmarks/create"</span> <span class="attr">method</span>=<span class="string">'post'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> @<span class="attr">public_bookmark.errors.any</span>? %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"error_explanation"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">pluralize</span>(@<span class="attr">public_bookmark.errors.count</span>, "<span class="attr">error</span>") %&gt;</span> prohibited this public_bookmark from being saved:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"></div><div class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> @<span class="attr">public_bookmark.errors.full_messages.each</span> <span class="attr">do</span> |<span class="attr">message</span>| %&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">message</span> %&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">end</span> %&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"public_bookmark_title"</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"public_bookmark_title"</span> <span class="attr">name</span>=<span class="string">"public_bookmark[title]"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"public_bookmark_url"</span>&gt;</span>Url<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"public_bookmark_url"</span> <span class="attr">name</span>=<span class="string">"public_bookmark[url]"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"public_bookmark_description"</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"public_bookmark_description"</span> <span class="attr">name</span>=<span class="string">"public_bookmark[description]"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"public_bookmark_submitter_email"</span>&gt;</span>Submitter email<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"public_bookmark_submitter_email"</span> <span class="attr">name</span>=<span class="string">"public_bookmark[submitter_email]"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"actions"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Create Public bookmark"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="原文"><a href="#原文" class="headerlink" title="原文"></a><a href="https://www.airpair.com/ruby-on-rails/posts/rails-vs-sinatra" target="_blank" rel="external">原文</a></h3><h3 id="github"><a href="#github" class="headerlink" title="github"></a><a href="https://github.com/xiaohesong/public-bookmarks-sinatra" target="_blank" rel="external">github</a></h3><h3 id="blog原文"><a href="#blog原文" class="headerlink" title="blog原文"></a><a href="http://blog.csdn.net/hesonggg/article/details/53187411" target="_blank" rel="external">blog原文</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Sinatra&quot;&gt;&lt;a href=&quot;#Sinatra&quot; class=&quot;headerlink&quot; title=&quot;Sinatra&quot;&gt;&lt;/a&gt;Sinatra&lt;/h3&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
    
    </summary>
    
      <category term="迁移" scheme="http://yoursite.com/categories/%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="sinatra" scheme="http://yoursite.com/tags/sinatra/"/>
    
  </entry>
  
</feed>
